name: VERDICT Main Workflow

# Runs whenever the main branch has a change made to it (except for
# tag-only pushes)

on:
  push:
    branches: [ master ]
    tags-ignore: [ '*' ]
  workflow_dispatch:

# Runs a build job and uploads VERDICT build artifacts:
# - Builds & uploads soteria_pp native binary
# - Builds VERDICT source & runs unit tests
# - Pushes verdict-dev image to Docker Hub
# - Updates verdict-dev update site

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        distribution: [ temurin ]
        java-version: [ 11 ]
        ocaml-compiler: [ 4.09.1 ]
        os: [ macos-10.15, ubuntu-20.04 ]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out VERDICT source
      uses: actions/checkout@v2.4.0

    - name: Set up OCaml
      uses: ocaml/setup-ocaml@v2.0.0-beta3
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}

    - name: Build soteria_pp
      run: |
        cd tools/verdict-back-ends/soteria_pp
        opam install --yes . --deps-only
        opam exec make

    - name: Upload soteria_pp
      uses: actions/upload-artifact@v2.2.4
      with:
        name: ${{ runner.os }}-binaries
        path: tools/verdict-back-ends/soteria_pp/bin/soteria_pp

    # Run rest of steps only on Linux - macOS isn't needed

    - name: Set up GraphViz
      if: runner.os == 'Linux'
      uses: ts-graphviz/setup-graphviz@v1

    - name: Set up Java
      if: runner.os == 'Linux'
      uses: actions/setup-java@v2.4.0
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java-version }}
        cache: maven

    - name: Build VERDICT source
      if: runner.os == 'Linux'
      run: |
        mvn -B install --file tools/verdict-back-ends/verdict-bundle/z3-native-libs/pom.xml
        mvn -B package -Dtycho.localArtifacts=ignore --file tools/pom.xml
      env:
        GraphVizPath: /usr/bin

    - name: Upload verdict-bundle-app
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v2.2.4
      with:
        name: ${{ runner.os }}-binaries
        path: tools/verdict-back-ends/verdict-bundle/verdict-bundle-app/target/verdict-bundle-app-1.0.0-SNAPSHOT-capsule.jar

    - name: Set up Docker Buildx
      if: runner.os == 'Linux'
      uses: docker/setup-buildx-action@v1.6.0

    - name: Login to Docker Hub
      if: runner.os == 'Linux'
      uses: docker/login-action@v1.10.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push verdict-dev image
      if: runner.os == 'Linux'
      uses: docker/build-push-action@v2.7.0
      with:
        context: tools/verdict-back-ends
        file: tools/verdict-back-ends/Dockerfile
        push: true
        cache-from: type=registry,ref=gehighassurance/verdict-dev:latest
        cache-to: type=inline
        tags: gehighassurance/verdict-dev:latest

    - name: Check out VERDICT-update-sites
      if: runner.os == 'Linux'
      uses: actions/checkout@v2.4.0
      with:
        repository: ge-high-assurance/VERDICT-update-sites
        token: ${{ secrets.CI_PAT }}
        path: VERDICT-update-sites

    - name: Update verdict-dev in VERDICT-update-sites
      if: runner.os == 'Linux'
      run: |
        cd VERDICT-update-sites
        rm -rf verdict-dev
        mv ../tools/verdict/com.ge.research.osate.verdict.updatesite/target/repository verdict-dev
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "Update verdict-dev in VERDICT-update-sites"
        git push
