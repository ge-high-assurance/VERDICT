name: VERDICT Release Workflow

# Runs whenever a release is published on GitHub

on:
  release:
    types: [ published ]

# Runs release workflow and uploads build artifacts:
# - Builds & uploads kind2 & soteria_pp native binaries
# - Builds VERDICT source and runs unit tests
# - Uploads extern.zip and README.md to release page
# - Pushes verdict image to Docker Hub
# - Updates verdict-latest in VERDICT-update-sites

jobs:
  native-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ocaml-compiler: [ 4.09.1 ]
        os: [ macos-12, ubuntu-22.04 ]

    steps:
    - name: Check out VERDICT source
      uses: actions/checkout@v4.1.1

    - name: Check out kind2 source
      if: runner.os == 'macOS'
      uses: actions/checkout@v4.1.1
      with:
        repository: kind2-mc/kind2
        path: tools/verdict-back-ends/kind2

    - name: Install zmq macOS library
      if: runner.os == 'macOS'
      run: brew install zmq

    - name: Set up OCaml
      uses: ocaml/setup-ocaml@v2.2.0
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}

    - name: Extract kind2 Linux binary
      if: runner.os == 'Linux'
      id: extract
      uses: shrink/actions-docker-extract@v3.0.0
      with:
        image: kind2/kind2:dev
        path: /kind2

    - name: Upload kind2 Linux binary
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4.0.0
      with:
        name: ${{ runner.os }}-binaries
        path: ${{ steps.extract.outputs.destination }}

    - name: Build kind2 macOS binary
      if: runner.os == 'macOS'
      run: |
        cd tools/verdict-back-ends/kind2
        opam install --yes . --deps-only
        opam exec make static

    - name: Upload kind2 macOS binary
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4.0.0
      with:
        name: ${{ runner.os }}-binaries
        path: tools/verdict-back-ends/kind2/bin/kind2

    - name: Build soteria_pp
      run: |
        cd tools/verdict-back-ends/soteria_pp
        opam install --yes . --deps-only
        opam exec make

    - name: Upload soteria_pp
      uses: actions/upload-artifact@v4.0.0
      with:
        name: ${{ runner.os }}-binaries
        path: tools/verdict-back-ends/soteria_pp/bin/soteria_pp

  release:
    needs: native-binaries
    container:
      image: maven:${{ matrix.maven-version }}
      volumes:
      - /usr/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        distribution: [ temurin ]
        java-version: [ 17 ]
        maven-version: [ 3.9.5 ]
        os: [ ubuntu-22.04 ]

    steps:
    - name: Check out VERDICT source
      uses: actions/checkout@v4.1.1

    - name: Set up Java and Maven
      uses: actions/setup-java@v4.0.0
      with:
        cache: maven
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java-version }}

    - name: Build VERDICT source
      run: |
        mvn -B install -f tools/verdict-back-ends/verdict-bundle/z3-native-libs/pom.xml
        mvn -B package -f tools/pom.xml -Dtycho.localArtifacts=ignore

    - name: Download macOS binaries
      uses: actions/download-artifact@v3.0.2
      with:
        name: macOS-binaries
        path: extern/mac

    - name: Download Linux binaries
      uses: actions/download-artifact@v3.0.2
      with:
        name: Linux-binaries
        path: extern/nix

    - name: Assemble extern folder
      run: |
        mv tools/verdict-back-ends/STEM extern
        mkdir extern/examples
        mv models/DeliveryDrone extern/examples
        mv models/DeliveryDrone_CASE_v* extern/examples
        chmod a+x extern/{mac,nix}/{kind2,soteria_pp}
        cp -a tools/verdict-back-ends/verdict-bundle/verdict-bundle-app/target/verdict-bundle-app-*-capsule.jar extern
        zip -r extern.zip extern
        mkdir tools/verdict-back-ends/soteria_pp/bin
        cp -a extern/nix/soteria_pp tools/verdict-back-ends/soteria_pp/bin

    - name: Upload extern.zip and README.md to release page
      uses: softprops/action-gh-release@v0.1.15
      with:
        files: |
          extern.zip
          docs/README.md

    - name: Login to Docker Hub
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.0.0

    - name: Build and push verdict image
      uses: docker/build-push-action@v5.1.0
      with:
        context: tools/verdict-back-ends
        file: tools/verdict-back-ends/Dockerfile
        push: true
        cache-from: type=registry,ref=gehighassurance/verdict-dev:latest
        cache-to: type=inline
        tags: |
          gehighassurance/verdict:latest
          gehighassurance/verdict:${{ github.event.release.tag_name }}

    - name: Check out VERDICT-update-sites
      uses: actions/checkout@v4.1.1
      with:
        repository: ge-high-assurance/VERDICT-update-sites
        token: ${{ secrets.CI_PAT }}
        path: VERDICT-update-sites

    - name: Update verdict-latest in VERDICT-update-sites
      run: |
        RELEASE="${{ github.event.release.tag_name }}"
        cd VERDICT-update-sites
        rm -rf verdict-latest verdict-$RELEASE
        mv ../tools/verdict/com.ge.research.osate.verdict.updatesite/target/repository verdict-latest
        cp -a verdict-latest verdict-$RELEASE
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "Update verdict-latest and verdict-$RELEASE in VERDICT-update-sites"
        git push
