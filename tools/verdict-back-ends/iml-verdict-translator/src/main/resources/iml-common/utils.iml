package iml.utils;

type OptionKind enum { Some, None };

type Option<T> {
	kind: OptionKind;
	value: T;
};

mk_some<T>: T -> Option<T> := fun (v:T) { some(o: Option<T>) {
	o.kind = OptionKind.Some &&
	o.value = v
}};

mk_none<T>: Option<T> := some(o: Option<T>) {
	o.kind = OptionKind.None
};

type ArrayList<T> {
	length: Int;
	element: T[length];
};