package globals
public

	-- separation of globals and dataStructs
	
	-- globals are organizational units of like data -> they are data groupings, but should they be abstract?
	-- dataStructs represent the individual data components
	
	-- problem : Does this add an additional "port" that can be considered an attack point that does not actually exist?
	
	-- !! to do - move individual components to dataStructs !!

	with dataStructs;
	
	-- new globals container
	-- represent a collection of data that does not actually exist in the code, but bundles together like variables
	-- that server a similar purpose for organization
	
	-- mission manager state container
	data mm_state_container
		features
			in_out : provides data access dataStructs::mm_state;
	end mm_state_container;
	
	data implementation mm_state_container.impl -- mm_exec.h, line 70-71
		subcomponents
			mm_sys_state : data dataStructs::mm_state.mm_sys_state;
			mm_sys_substate : data dataStructs::mm_state.mm_sys_substate;
		connections
			c1 : data access in_out <-> mm_sys_state;
			c2 : data access in_out <-> mm_sys_substate;
	end mm_state_container.impl;
		
	-- gps data container
	data gps_data_container
		features
			io_write : provides data access dataStructs::gps_data;
			geu_step_read_write : provides data access dataStructs::gps_data;
			--ecef_position_write : provides data access globals::ecef_position[3];
	end gps_data_container;
	
	data implementation gps_data_container.impl -- u_blox_GPS_interface5.c, line 61-108
		subcomponents
			ecef_position : data dataStructs::gps_data.ecef_position;
			--ecef_position : data globals::ecef_position[3];
			ecef_position_accuracy : data globals::ecef_position_accuracy;
				--ecef_position_time_valid : data globals::ecef_position_time_valid;
			ecef_position_data_valid : data globals::ecef_position_data_valid;
			ecef_velocity : data globals::ecef_velocity[3];
			ecef_velocity_accuracy : data globals::ecef_velocity_accuracy;
				--ecef_velocity_time_valid : data globals::ecef_velocity_time_valid;
			ecef_velocity_data_valid : data globals::ecef_velocity_data_valid;
			lla_horizontal_accuracy : data globals::lla_horizontal_accuracy;
			lla_vertical_accuracy : data globals::lla_vertical_accuracy;
				--GDOP_value : data globals::GDOP_value;
			PDOP_value : data globals::PDOP_value;
			TDOP_value : data globals::TDOP_value;
			VDOP_value : data globals::VDOP_value;
			HDOP_value : data globals::HDOP_value;
				--NDOP_value : data globals::NDOP_value;
				--EDOP_value : data globals::EDOP_value;
			status_gps_fix : data globals::status_gps_fix;
			ubx_message_counter : data globals::ubx_message_counter;
			antenna_status : data globals::antenna_status;
			NoisePerMS : data globals::NoisePerMS;
			AGCCnt : data globals::AGCCnt;
			NCH_counter : data globals::NCH_counter;
			SVID_buffer : data globals::SVID_buffer;
			CNO_buffer : data globals::CNO_buffer;

		connections
			ecef_position_in : data access io_write -> ecef_position;
			ecef_position_out : data access ecef_position <-> geu_step_read_write;
			
	end gps_data_container.impl;
	
	-- imu data container
	data imu_data_container
		features
			io_write : provides data access dataStructs::imu_data;
			geu_step_read_write : provides data access dataStructs::imu_data;
	end imu_data_container;
	
	data implementation imu_data_container.impl  -- imu_driver.c, line 41-58
		subcomponents 
			imu_data_buffer : data globals::imu_data_buffer[6];
			imu_ready : data globals::imu_ready;
			launch_detected : data globals::launch_detected;
			altimeter_altitude : data globals::altimeter_altitude;
			airspeed_speed : data globals::airspeed_speed;
	end imu_data_container.impl;
	
	-- navigation data container
	data navigation_data_container
		features
			in_out : provides data access dataStructs::navigation_data;
	end navigation_data_container;
	
	data implementation navigation_data_container.impl
	end navigation_data_container.impl;
	
	-- guidance data container
	data guidance_data_container
		features
			in_out : provides data access dataStructs::guidance_data;
	end guidance_data_container;
	
	data implementation guidance_data_container.impl
	end guidance_data_container.impl;
	
	-- U_BLOX data container
	data ecef_position
	end ecef_position;
	
	data implementation ecef_position.impl
	end ecef_position.impl;

	data ecef_position_accuracy
	end ecef_position_accuracy;
	
	data implementation ecef_position_accuracy.impl
	end ecef_position_accuracy.impl;

	data ecef_position_time_valid
	end ecef_position_time_valid;
	
	data implementation ecef_position_time_valid.impl
	end ecef_position_time_valid.impl;
	
	data ecef_position_data_valid
	end ecef_position_data_valid;
	
	data implementation ecef_position_data_valid.impl
	end ecef_position_data_valid.impl;
	
	data ecef_velocity
	end ecef_velocity;
	
	data implementation ecef_velocity.impl
	end ecef_velocity.impl;
	
	data ecef_velocity_accuracy
	end ecef_velocity_accuracy;
	
	data implementation ecef_velocity_accuracy.impl
	end ecef_velocity_accuracy.impl;
	
	data ecef_velocity_time_valid
	end ecef_velocity_time_valid;
	
	data implementation ecef_velocity_time_valid.impl
	end ecef_velocity_time_valid.impl;
	
	data ecef_velocity_data_valid
	end ecef_velocity_data_valid;
	
	data implementation ecef_velocity_data_valid.impl
	end ecef_velocity_data_valid.impl;

	data lla_horizontal_accuracy
	end lla_horizontal_accuracy;
	
	data implementation lla_horizontal_accuracy.impl
	end lla_horizontal_accuracy.impl;
	
	data lla_vertical_accuracy
	end lla_vertical_accuracy;
	
	data implementation lla_vertical_accuracy.impl
	end lla_vertical_accuracy.impl;
	
	data GDOP_value
	end GDOP_value;
	
	data implementation GDOP_value.impl
	end GDOP_value.impl;
	
	data PDOP_value
	end PDOP_value;
	
	data implementation PDOP_value.impl
	end PDOP_value.impl;
	
	data TDOP_value
	end TDOP_value;
	
	data implementation TDOP_value.impl
	end TDOP_value.impl;

	data VDOP_value
	end VDOP_value;
	
	data implementation VDOP_value.impl
	end VDOP_value.impl;

	data HDOP_value
	end HDOP_value;
	
	data implementation HDOP_value.impl
	end HDOP_value.impl;

	data NDOP_value
	end NDOP_value;
	
	data implementation NDOP_value.impl
	end NDOP_value.impl;

	data EDOP_value
	end EDOP_value;
	
	data implementation EDOP_value.impl
	end EDOP_value.impl;

	data status_gps_fix
	end status_gps_fix;
	
	data implementation status_gps_fix.impl
	end status_gps_fix.impl;
	
	data ubx_message_counter
	end ubx_message_counter;
	
	data implementation ubx_message_counter.impl
	end ubx_message_counter.impl;
	
	data antenna_status
	end antenna_status;
	
	data implementation antenna_status.impl
	end antenna_status.impl;
	
	data NoisePerMS
	end NoisePerMS;
	
	data implementation NoisePerMS.impl
	end NoisePerMS.impl;
	
	data AGCCnt
	end AGCCnt;
	
	data implementation AGCCnt.impl
	end AGCCnt.impl;
	
	data NCH_counter
	end NCH_counter;
	
	data implementation NCH_counter.impl
	end NCH_counter.impl;
	
	data SVID_buffer
	end SVID_buffer;
	
	data implementation SVID_buffer.impl
	end SVID_buffer.impl;
	
	data CNO_buffer
	end CNO_buffer;
	
	data implementation CNO_buffer.impl
	end CNO_buffer.impl;
	
	data imu_data_buffer
	end imu_data_buffer;
	
	data implementation imu_data_buffer.impl
	end imu_data_buffer.impl;
	
	data imu_ready
	end imu_ready;
	
	data implementation imu_ready.impl
	end imu_ready.impl;
	
	data launch_detected
	end launch_detected;
	
	data implementation launch_detected.impl
	end launch_detected.impl;
	
	data altimeter_altitude
	end altimeter_altitude;
	
	data implementation altimeter_altitude.impl
	end altimeter_altitude.impl;
	
	data airspeed_speed
	end airspeed_speed;
	
	data implementation airspeed_speed.impl
	end airspeed_speed.impl;

	-- geu_step global variables
	data gnc_frame_time
	end gnc_frame_time;
	
	data implementation gnc_frame_time.impl
	end gnc_frame_time.impl;

	data esw_state
	end esw_state;
	
	data implementation esw_state.impl
	end esw_state.impl;
	
	data timer_out
	end timer_out;
	
	data implementation timer_out.impl
	end timer_out.impl;

	data gnc_in
	end gnc_in;
	
	data implementation gnc_in.impl
	end gnc_in.impl;
	
	data geu_main	
	end geu_main;
	
	data implementation geu_main.impl
	end geu_main.impl;
		
	data gnc_out
	end gnc_out;
	
	data implementation gnc_out.impl
	end gnc_out.impl;
	
	-- gnc_step global variables
	data mm_sys_time
	end mm_sys_time;
	
	data mm_launch_time
	end mm_launch_time;
	
	data mm_launched
	end mm_launched;
	
	data mm_esw_dt
	end mm_esw_dt;
	
	-- AIO_GUID data 
	data mcg_heading_cmd
	end mcg_heading_cmd;
	
	data mcg_altitude_cmd
	end mcg_altitude_cmd;
	
	data mcg_cruise_speed
	end mcg_cruise_speed;
	
	data mcg_heading_err
	end mcg_heading_err;
	
	data mcg_altitude_err
	end mcg_altitude_err;
	
	data mcg_speed_eer
	end mcg_speed_eer;
	
	data mm_sys_state
	end mm_sys_state;
	
	data mm_sys_substate
	end mm_sys_substate;
	
	data mcg_flightPathAngle_rad
	end mcg_flightPathAngle_rad;
	
	-- AIO_NAV data
	data navfct
	end navfct;
	
	data nav_data
	end nav_data;
	
	-- servo data
	
	-- other globals
	data exec_init_called
	end exec_init_called;
		
	--PreLaunch Data 
	data Power_to_Missile
	end Power_to_Missile;
	
	data implementation Power_to_Missile.impl
	end Power_to_Missile.impl;
	
	data Run_Bit
	end Run_Bit;
	
	data implementation Run_Bit.impl
	end Run_Bit.impl;
	
	data Detailed_Bit_Report
	end Detailed_Bit_Report;
	
	data implementation Detailed_Bit_Report.impl
	end Detailed_Bit_Report.impl;
	
	data GPS_Keys
	end GPS_Keys;
	
	data implementation GPS_Keys.impl
	end GPS_Keys.impl;
	
	data Purge_Keypath_Command
	end Purge_Keypath_Command;
	
	data implementation Purge_Keypath_Command.impl
	end Purge_Keypath_Command.impl;
	
	data Keypath_Purged
	end Keypath_Purged;
	
	data implementation Keypath_Purged.impl
	end Keypath_Purged.impl;
	
	data Almanac_Data
	end Almanac_Data;
	
	data implementation Almanac_Data.impl
	end Almanac_Data.impl;
	
	data Ephemeris_data
	end Ephemeris_data;
	
	data implementation Ephemeris_Data.impl
	end Ephemeris_Data.impl;
	
	Data PTAM
	end PTAM;
	
	Data implementation PTAM.impl
	end PTAM.impl;
	
	data Mission_Critical_Data
	end Mission_Critical_Data;
	
	data implementation Mission_Critical_Data.impl
	end Mission_Critical_Data.impl;
	
	data Squib_Battery_Preparation_Command
	end Squib_Battery_Preparation_Command;
	
	data implementation Squib_Battery_Preparation_Command.impl
	end Squib_Battery_Preparation_Command.impl;
	
	data Squib_Battery_Command
	end Squib_Battery_Command;
	
	Data implementation Squib_Battery_Command.impl
	end Squib_Battery_Command.impl;
	
	data Acknowledgement_Message
	end Acknowledgement_Message;
	
	data implementation Acknowledgement_Message.impl
	end Acknowledgement_Message.impl;
	
	Data Launcher_Power_Present
	end Launcher_Power_Present;
	
	Data implementation Launcher_Power_Present.impl
	end Launcher_Power_Present.impl;
	
end globals;