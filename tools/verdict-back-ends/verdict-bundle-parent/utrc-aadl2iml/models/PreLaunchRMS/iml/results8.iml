package agree;
import iml.systems.*;
import iml.software.*;
import iml.synchdf.ontological.*;
import iml.contracts.*;
 
type geu_step_system_dot_impl   exhibits(geu_step_systemTrait){
	UpdateDriverIn : UpdateDriverIn;
	UpdateDriverOut : UpdateDriverOut;
	latch_gnc_frame_time : latch_gnc_frame_time;
	get_gnc_frame_dt : get_gnc_frame_dt;
	get_timer : get_timer;
	initialization_functions : initialization_functions;
	state_machine_set_state : state_machine_set_state;
	state_machine_get_esw_state : state_machine_get_esw_state;
	geu_main : geu_main;
	gnc_in : gnc_in;
	gnc_out : gnc_out;
	esw_state : esw_state;
	exec_init_called : exec_init_called;
	guidance_data : guidance_data_container;
	navigation_data : navigation_data_container;
	mm_state : mm_state_container;
	dt : dt;
	gnc_step : gnc_step_system;
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@1eb58871 (name: c1) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@5e220be6 (name: c8) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@7c590893 (name: c6) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@62b76443 (name: c7) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@50738e64 (name: init1) (bidirectional: true) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@1e40d2b7 (name: Uin1) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@2a694c7c (name: Uin2) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@73a5b00e (name: Uin3) (bidirectional: true) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@3fe900b0 (name: Uin4) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@27a4a890 (name: gnc1) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@474e0ab4 (name: gnc2) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@19b5f793 (name: gnc3) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@6eae9895 (name: gnc4) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@6c4c4df8 (name: gnc5) (bidirectional: true) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@5be0e16f (name: Uout1) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@6d5f8cef (name: Uout2) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@77afcbe1 (name: Uout3) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@79026b61 (name: Uout4) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@25b506b7 (name: Uout5) (bidirectional: false) (accessCategory: data) not supported
	// FEATURE: org.osate.aadl2.impl.AccessConnectionImpl@349cde1a (name: Uout6) (bidirectional: false) (accessCategory: data) not supported
	Uout7 : Connector<OutDataPort<UBX_message_dot_GUID_message>, OutDataPort<UBX_message_dot_GUID_message>> := connect<OutDataPort<UBX_message_dot_GUID_message>, OutDataPort<UBX_message_dot_GUID_message>>(UpdateDriverOut.GUID_message_out, GUID_message_out);
	assert{UpdateDriverOut.GUID_message_out.data = GUID_message_out.data};
	Uout8 : Connector<OutDataPort<UBX_message_dot_NAV_message>, OutDataPort<UBX_message_dot_NAV_message>> := connect<OutDataPort<UBX_message_dot_NAV_message>, OutDataPort<UBX_message_dot_NAV_message>>(UpdateDriverOut.NAV_message_out, NAV_message_out);
	assert{UpdateDriverOut.NAV_message_out.data = NAV_message_out.data};
};

trait gncExecInitTrait  {
};

type gncExecInit  exhibits(gncExecInitTrait);
trait state_machine_get_esw_stateTrait  {
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@34942d7c (name: get_esw_state) (kind: requires) not supported
};

type state_machine_get_esw_state  exhibits(state_machine_get_esw_stateTrait);
type gncExecInit_dot_impl   exhibits(gncExecInitTrait){
};

type state_machine_set_state_dot_impl   exhibits(state_machine_set_stateTrait){
};

trait dtTrait  refines(Data) {
};

type dt  exhibits(dtTrait);
trait geu_step_systemTrait  refines(Synchronous, Component, System) {
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@65973195 (name: gps_data) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@132ea193 (name: imu_data) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@2c4ce5a9 (name: gnc_in_write) (kind: provides) not supported
	GUID_message_out: OutDataPort<UBX_message_dot_GUID_message>;
	NAV_message_out: OutDataPort<UBX_message_dot_NAV_message>;
};

type geu_step_system  exhibits(geu_step_systemTrait);
trait get_gnc_frame_dtTrait  {
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@5c6af94d (name: assignment) (kind: requires) not supported
};

type get_gnc_frame_dt  exhibits(get_gnc_frame_dtTrait);
trait state_machine_set_stateTrait  {
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@76a0e2af (name: set_esw_state) (kind: requires) not supported
};

type state_machine_set_state  exhibits(state_machine_set_stateTrait);
type latch_gnc_frame_time_dot_impl   exhibits(latch_gnc_frame_timeTrait){
};

type UpdateDriverOut_dot_impl   exhibits(UpdateDriverOutTrait){
};

trait InitializeDriversTrait  {
};

type InitializeDrivers  exhibits(InitializeDriversTrait);
type get_timer_dot_impl   exhibits(get_timerTrait){
};

trait UpdateDriverInTrait  {
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@5a1def68 (name: gnc_in_write) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@3c39cf7f (name: geu_main_read_write) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@71a3205 (name: gps_data_read) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@71b3763f (name: imu_data_read) (kind: requires) not supported
};

type UpdateDriverIn  exhibits(UpdateDriverInTrait);
type get_gnc_frame_dt_dot_impl   exhibits(get_gnc_frame_dtTrait){
};

trait get_timerTrait  {
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@49652431 (name: timer_gnc) (kind: requires) not supported
};

type get_timer  exhibits(get_timerTrait);
type InitializeDrivers_dot_impl   exhibits(InitializeDriversTrait){
};

trait initialization_functionsTrait  {
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@457efde (name: exec_init_called) (kind: requires) not supported
};

type initialization_functions  exhibits(initialization_functionsTrait);
type dt_dot_impl   exhibits(dtTrait){
};

trait latch_gnc_frame_timeTrait  {
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@5058da5a (name: gnc_frame_time) (kind: requires) not supported
};

type latch_gnc_frame_time  exhibits(latch_gnc_frame_timeTrait);
trait UpdateDriverOutTrait  {
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@600c5acf (name: geu_main_read) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@a64ca7f (name: gnc_out_read) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@4b4be42c (name: guidance_data_read) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@7bcbc143 (name: navigation_data_read) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@799326d7 (name: mm_sys_state_read) (kind: requires) not supported
	// FEATURE: org.osate.aadl2.impl.DataAccessImpl@55082ca8 (name: mm_sys_substate_read) (kind: requires) not supported
	NAV_message_out: OutDataPort<UBX_message_dot_NAV_message>;
	GUID_message_out: OutDataPort<UBX_message_dot_GUID_message>;
};

type UpdateDriverOut  exhibits(UpdateDriverOutTrait);
type UpdateDriverIn_dot_impl   exhibits(UpdateDriverInTrait){
};

type state_machine_get_esw_state_dot_impl   exhibits(state_machine_get_esw_stateTrait){
};

type initialization_functions_dot_impl   exhibits(initialization_functionsTrait){
	InitializeDrivers : InitializeDrivers;
	gncExecInit : gncExecInit;
};


