package agree;
import iml.systems.*;
import iml.software.*;
import iml.synchdf.ontological.*;
import iml.contracts.*;
 
trait UBX_messageTrait  refines(Data) {
};

type UBX_message  exhibits(UBX_messageTrait);
type UBX_message_dot_Waypoint_message   exhibits(UBX_messageTrait){
};

trait GPS_TYPETrait  refines(Data) {
};

type GPS_TYPE  exhibits(GPS_TYPETrait);
trait gps_dataTrait  refines(Data) {
};

type gps_data  exhibits(gps_dataTrait);
trait mm_stateTrait  refines(Data) {
};

type mm_state  exhibits(mm_stateTrait);
type AIRDATA_TYPE_dot_impl   exhibits(AIRDATA_TYPETrait){
	airSpeed : double;
};

trait imu_dataTrait  refines(Data) {
};

type imu_data  exhibits(imu_dataTrait);
trait IMU_TYPETrait  refines(Data) {
};

type IMU_TYPE  exhibits(IMU_TYPETrait);
trait unsigned_charTrait  refines(Data) {
};

type unsigned_char  exhibits(unsigned_charTrait);
trait unsigned_shortTrait  refines(Data) {
};

type unsigned_short  exhibits(unsigned_shortTrait);
trait FLOAT64Trait  refines(Data) {
};

type FLOAT64  exhibits(FLOAT64Trait);
type servo_data_dot_impl   exhibits(servo_dataTrait){
};

trait GEU_MAIN_DRIVERS_INTrait  refines(Data) {
};

type GEU_MAIN_DRIVERS_IN  exhibits(GEU_MAIN_DRIVERS_INTrait);
type gps_data_dot_ecef_position   exhibits(gps_dataTrait){
};

trait servo_dataTrait  refines(Data) {
};

type servo_data  exhibits(servo_dataTrait);
type SENSOR_TYPE_dot_impl   exhibits(SENSOR_TYPETrait){
	mag_field : double;
	altimeter_altitude : double;
	tmp2 : double;
};

type UBX_message_dot_NAV_message   exhibits(UBX_messageTrait){
};

type navigation_data_dot_navfct   exhibits(navigation_dataTrait){
};

type IMU_TYPE_dot_impl   exhibits(IMU_TYPETrait){
	del_att : double;
	del_vel : double;
	data_valid : unsigned_char;
	launch_detected : unsigned_char;
};

trait AIRDATA_TYPETrait  refines(Data) {
};

type AIRDATA_TYPE  exhibits(AIRDATA_TYPETrait);
trait doubleTrait  refines(Data) {
};

type double  exhibits(doubleTrait);
type UBX_message_dot_GUID_message   exhibits(UBX_messageTrait){
};

type gps_data_dot_impl   exhibits(gps_dataTrait){
};

trait SENSOR_TYPETrait  refines(Data) {
};

type SENSOR_TYPE  exhibits(SENSOR_TYPETrait);
type UBX_message_dot_GPS_message   exhibits(UBX_messageTrait){
};

trait UINT16Trait  refines(Data) {
};

type UINT16  exhibits(UINT16Trait);
type mm_state_dot_mm_sys_substate   exhibits(mm_stateTrait){
};

type GEU_MAIN_dot_impl   exhibits(GEU_MAINTrait){
	simulate_devices : UINT8;
	halt : UINT8;
	override_servos : UINT8;
	override_throttle : UINT8;
	frame_counter : UINT32;
	excess_time : FLOAT64;
	overruns : UINT32;
	overrun_time : FLOAT64;
	drivers_in : GEU_MAIN_DRIVERS_IN;
};

trait navigation_dataTrait  refines(Data) {
};

type navigation_data  exhibits(navigation_dataTrait);
trait UINT8Trait  refines(Data) {
};

type UINT8  exhibits(UINT8Trait);
type GEU_MAIN_DRIVERS_IN_dot_impl   exhibits(GEU_MAIN_DRIVERS_INTrait){
	mission_time : FLOAT64;
	frame_dt : FLOAT64;
	gps : GPS_TYPE;
	gps_signal_chn : UINT16;
	gps_singal_svid : UINT16;
	gps_signal_cno : UINT16;
	gps_message_counter : UINT32;
	gps_antenna_status : UINT16;
	gps_NoisePerMS : UINT16;
	gps_AGCCnt : UINT16;
	imu : IMU_TYPE;
	airdata : AIRDATA_TYPE;
	sensor : SENSOR_TYPE;
};

type navigation_data_dot_nav_data   exhibits(navigation_dataTrait){
};

type guidance_data_dot_impl   exhibits(guidance_dataTrait){
};

type mm_state_dot_mm_sys_state   exhibits(mm_stateTrait){
};

type imu_data_dot_impl   exhibits(imu_dataTrait){
};

trait guidance_dataTrait  refines(Data) {
};

type guidance_data  exhibits(guidance_dataTrait);
type navigation_data_dot_impl   exhibits(navigation_dataTrait){
};

type UBX_message_dot_IMU_message   exhibits(UBX_messageTrait){
};

trait GEU_MAINTrait  refines(Data) {
};

type GEU_MAIN  exhibits(GEU_MAINTrait);
trait UINT32Trait  refines(Data) {
};

type UINT32  exhibits(UINT32Trait);
type GPS_TYPE_dot_impl   exhibits(GPS_TYPETrait){
	data_rx : unsigned_char;
	fixStatus : unsigned_char;
	ttag : double;
	ecefPos : double;
	ecefVel : double;
	estHorizPosError : double;
	estVertPosError : double;
	positionDOP : unsigned_short;
	verticalDOP : unsigned_short;
	horizontalDOP : unsigned_short;
	timeDOP : unsigned_short;
	posAcc : double;
	velAcc : double;
	horizAcc : double;
	vertAcc : double;
};


