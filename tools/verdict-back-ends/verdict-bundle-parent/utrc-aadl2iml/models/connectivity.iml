package iml.connectivity ;
import iml.lang.* ;

/*A system which can contain ports and components.
 * If a system does not contain components, then 
 * it is a leaf system. This annotation is supposed
 * to be used when defining a type corresponding 
 * to a system.
 */
annotation System ;

/* This annotation is used on a symbol that belongs
 * to a system type to denote that the symbol
 * represents a component. The type of the system must
 * have a System annotation.
 * 
 */
annotation Component ;

/* This annotation is used on a symbol that belongs
 * to a system type to denote that the symbol
 * represents an input port.
 *  
 */
annotation Input ;

/* This annotation is used on a symbol that belongs
 * to a system type to denote that the symbol
 * represents an output port.
 *  
 */
annotation Output ;

/* This annotation is used on a symbol that belongs
 * to a system type to denote that the symbol
 * represents an local variable.
 *  
 */
annotation Local ;

/*A connection is a type of two elements of the same type.
 * A connector is typically instantiated and assigned 
 * to a tuple made of the source port and the destination port.
 */
//type Connector<T> is (T,T);
type Connector<T> {
	source : T ;
	target : T ;
};

