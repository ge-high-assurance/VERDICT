<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<vdm_model:model xmlns:vdm_lustre="verdict::vdm::vdm_lustre" xmlns:vdm_model="verdict::vdm::vdm_model" xmlns:vdm_data="verdict::vdm::vdm_data">
    <name>HawkeyeUAV</name>
    <typeDeclaration>
        <vdm_data:name>Movement</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:enumType>
                <vdm_data:enumValue>Turn_Right</vdm_data:enumValue>
                <vdm_data:enumValue>Turn_Left</vdm_data:enumValue>
                <vdm_data:enumValue>Move_Forward</vdm_data:enumValue>
                <vdm_data:enumValue>Stop</vdm_data:enumValue>
            </vdm_data:enumType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>Direction</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:enumType>
                <vdm_data:enumValue>North</vdm_data:enumValue>
                <vdm_data:enumValue>South</vdm_data:enumValue>
                <vdm_data:enumValue>East</vdm_data:enumValue>
                <vdm_data:enumValue>West</vdm_data:enumValue>
            </vdm_data:enumType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>Action</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:enumType>
                <vdm_data:enumValue>Camera</vdm_data:enumValue>
                <vdm_data:enumValue>Weapon</vdm_data:enumValue>
                <vdm_data:enumValue>Land</vdm_data:enumValue>
                <vdm_data:enumValue>None</vdm_data:enumValue>
            </vdm_data:enumType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>Position</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:recordType>
                <vdm_data:recordField>
                    <vdm_data:name>x</vdm_data:name>
                    <vdm_data:type>
                        <vdm_data:plainType>int</vdm_data:plainType>
                    </vdm_data:type>
                </vdm_data:recordField>
                <vdm_data:recordField>
                    <vdm_data:name>y</vdm_data:name>
                    <vdm_data:type>
                        <vdm_data:plainType>int</vdm_data:plainType>
                    </vdm_data:type>
                </vdm_data:recordField>
            </vdm_data:recordType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>TaskStatus</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:enumType>
                <vdm_data:enumValue>Successful</vdm_data:enumValue>
                <vdm_data:enumValue>Aborted</vdm_data:enumValue>
                <vdm_data:enumValue>InProgress</vdm_data:enumValue>
                <vdm_data:enumValue>Started</vdm_data:enumValue>
            </vdm_data:enumType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>Task</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:recordType>
                <vdm_data:recordField>
                    <vdm_data:name>waypoint</vdm_data:name>
                    <vdm_data:type>
                        <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
                    </vdm_data:type>
                </vdm_data:recordField>
                <vdm_data:recordField>
                    <vdm_data:name>action</vdm_data:name>
                    <vdm_data:type>
                        <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
                    </vdm_data:type>
                </vdm_data:recordField>
                <vdm_data:recordField>
                    <vdm_data:name>status</vdm_data:name>
                    <vdm_data:type>
                        <vdm_data:userDefinedType>TaskStatus</vdm_data:userDefinedType>
                    </vdm_data:type>
                </vdm_data:recordField>
            </vdm_data:recordType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>MotorCommand</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:enumType>
                <vdm_data:enumValue>IncreaseX</vdm_data:enumValue>
                <vdm_data:enumValue>DecreaseX</vdm_data:enumValue>
                <vdm_data:enumValue>IncreaseY</vdm_data:enumValue>
                <vdm_data:enumValue>DecreaseY</vdm_data:enumValue>
                <vdm_data:enumValue>IncreaseYaw</vdm_data:enumValue>
                <vdm_data:enumValue>DecreaseYaw</vdm_data:enumValue>
                <vdm_data:enumValue>NoChange</vdm_data:enumValue>
            </vdm_data:enumType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>UAVState</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:enumType>
                <vdm_data:enumValue>s_RETURN_TO_LAUNCH</vdm_data:enumValue>
                <vdm_data:enumValue>s_AUTO_FLIGHT_MODE</vdm_data:enumValue>
                <vdm_data:enumValue>s_MANUAL_FLIGHT_MODE</vdm_data:enumValue>
            </vdm_data:enumType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>YawAngle</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:enumType>
                <vdm_data:enumValue>Y_0</vdm_data:enumValue>
                <vdm_data:enumValue>Y_90</vdm_data:enumValue>
                <vdm_data:enumValue>Y_180</vdm_data:enumValue>
                <vdm_data:enumValue>Y_270</vdm_data:enumValue>
            </vdm_data:enumType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>Tasks</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:recordType>
                <vdm_data:recordField>
                    <vdm_data:name>task1</vdm_data:name>
                    <vdm_data:type>
                        <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                    </vdm_data:type>
                </vdm_data:recordField>
                <vdm_data:recordField>
                    <vdm_data:name>task2</vdm_data:name>
                    <vdm_data:type>
                        <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                    </vdm_data:type>
                </vdm_data:recordField>
                <vdm_data:recordField>
                    <vdm_data:name>task3</vdm_data:name>
                    <vdm_data:type>
                        <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                    </vdm_data:type>
                </vdm_data:recordField>
            </vdm_data:recordType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>ATE6Type</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:enumType>
                <vdm_data:enumValue>RC_Abnormal</vdm_data:enumValue>
                <vdm_data:enumValue>RC_Normal</vdm_data:enumValue>
            </vdm_data:enumType>
        </vdm_data:definition>
    </typeDeclaration>
    <typeDeclaration>
        <vdm_data:name>ATE7Type</vdm_data:name>
        <vdm_data:definition>
            <vdm_data:enumType>
                <vdm_data:enumValue>Inadequate</vdm_data:enumValue>
                <vdm_data:enumValue>Adequate</vdm_data:enumValue>
            </vdm_data:enumType>
        </vdm_data:definition>
    </typeDeclaration>
    <componentType id="Actuators" name="Actuators">
        <port id="Actuators.cmd">
            <name>cmd</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Actuators.payloadCmdFC">
            <name>payloadCmdFC</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Actuators.mstate">
            <name>mstate</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Actuators.payloadCmdRC">
            <name>payloadCmdRC</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Actuators.battery_level">
            <name>battery_level</name>
            <mode>out</mode>
            <type>
                <vdm_data:plainType>int</vdm_data:plainType>
            </type>
        </port>
        <port id="Actuators.payload_performed">
            <name>payload_performed</name>
            <mode>out</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
        <contract>
            <vdm_lustre:symbol>
                <vdm_lustre:name>payloadCMD</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_MANUAL_FLIGHT_MODE</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>payloadCmdRC</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:identifier>payloadCmdFC</vdm_lustre:identifier>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>prev_battery_level</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>int</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:arrow>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>INITIAL_BATTERY_LEVEL</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:pre>
<vdm_lustre:identifier>battery_level</vdm_lustre:identifier>
                            </vdm_lustre:pre>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:arrow>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>battery4pos_consumed</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>IncreaseY</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>IncreaseX</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>DecreaseY</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>DecreaseX</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>NoChange</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>battery4dir_consumed</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>IncreaseYaw</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>DecreaseYaw</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>battery_consumed</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>battery4pos_consumed</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>battery4dir_consumed</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>payload_performed</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>battery_level_diff</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>int</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:minus>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>prev_battery_level</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>battery_level</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:minus>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>payload_performed_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>payload_performed</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:notEqual>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>payloadCMD</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>None</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:notEqual>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>NoChange</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>battery_level_Def1</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:not>
<vdm_lustre:identifier>battery_consumed</vdm_lustre:identifier>
                            </vdm_lustre:not>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>battery_level_diff</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:intLiteral>0</vdm_lustre:intLiteral>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>battery_level_Def2</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>battery_consumed</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:lessThanOrEqualTo>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>BATTERY_CONSUMPTION_LOWER_BOUND</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>battery_level_diff</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:lessThanOrEqualTo>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:lessThanOrEqualTo>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>battery_level_diff</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>BATTERY_CONSUMPTION_UPPER_BOUND</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:lessThanOrEqualTo>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="BatteryHealthCheck" name="BatteryHealthCheck">
        <port id="BatteryHealthCheck.battery_level">
            <name>battery_level</name>
            <mode>in</mode>
            <type>
                <vdm_data:plainType>int</vdm_data:plainType>
            </type>
        </port>
        <port id="BatteryHealthCheck.ATE7">
            <name>ATE7</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>ATE7Type</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:symbol>
                <vdm_lustre:name>next_ATE7</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>ATE7Type</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:lessThan>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>battery_level</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>BATTERY_LEVEL_THRESHOLD</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:lessThan>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>Adequate</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:identifier>Inadequate</vdm_lustre:identifier>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>ATE7_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>ATE7</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:arrow>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>Adequate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:pre>
        <vdm_lustre:identifier>next_ATE7</vdm_lustre:identifier>
    </vdm_lustre:pre>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:arrow>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="DME_VOR" name="DME_VOR">
        <port id="DME_VOR.location_source_pos">
            <name>location_source_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="DME_VOR.location_source_dir">
            <name>location_source_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="DME_VOR.pos">
            <name>pos</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="DME_VOR.dir">
            <name>dir</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>pos_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>pos</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>dir_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>dir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>location_source_dir</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="FlightController" name="FlightController">
        <port id="FlightController.dest_reached">
            <name>dest_reached</name>
            <mode>in</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
        <port id="FlightController.payload_performed">
            <name>payload_performed</name>
            <mode>in</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
        <port id="FlightController.tasks">
            <name>tasks</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Tasks</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="FlightController.mstate">
            <name>mstate</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="FlightController.payloadCmd">
            <name>payloadCmd</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="FlightController.waypoint">
            <name>waypoint</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:symbol>
                <vdm_lustre:name>curr_dest_reached</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:arrow>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:boolLiteral>false</vdm_lustre:boolLiteral>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:pre>
<vdm_lustre:identifier>dest_reached</vdm_lustre:identifier>
                            </vdm_lustre:pre>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:arrow>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>curr_payload_performed</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:arrow>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:boolLiteral>false</vdm_lustre:boolLiteral>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:pre>
<vdm_lustre:identifier>payload_performed</vdm_lustre:identifier>
                            </vdm_lustre:pre>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:arrow>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>task1</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:arrow>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>tasks</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>task1</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:pre>
<vdm_lustre:identifier>upd_task1</vdm_lustre:identifier>
                            </vdm_lustre:pre>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:arrow>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>task2</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:arrow>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>tasks</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>task2</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:pre>
<vdm_lustre:identifier>upd_task2</vdm_lustre:identifier>
                            </vdm_lustre:pre>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:arrow>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>task3</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:arrow>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>tasks</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>task3</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:pre>
<vdm_lustre:identifier>upd_task3</vdm_lustre:identifier>
                            </vdm_lustre:pre>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:arrow>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task1_started</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Started</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task1_inprogress</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task1_successful</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task1_aborted</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:not>
<vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
                            </vdm_lustre:not>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task2_started</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Started</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task2_inprogress</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task2_successful</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task2_aborted</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:not>
<vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
                            </vdm_lustre:not>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task3_started</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task3</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Started</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task3_inprogress</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task3</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
    </vdm_lustre:not>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task3_successful</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>task2</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task3</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_auto_task3_aborted</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>task2</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task3</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:not>
<vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
                            </vdm_lustre:not>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_return_when_task1</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_RETURN_TO_LAUNCH</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_return_when_task2</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_RETURN_TO_LAUNCH</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>task2</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_return_when_task3</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_RETURN_TO_LAUNCH</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>task3</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>s_manual_mode</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_MANUAL_FLIGHT_MODE</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>upd_task1</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:identifier>s_auto_task1_started</vdm_lustre:identifier>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:call vdm_lustre:nodeId="set_task_status">
<vdm_lustre:argument>
    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
</vdm_lustre:argument>
<vdm_lustre:argument>
    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
</vdm_lustre:argument>
                            </vdm_lustre:call>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:identifier>s_auto_task1_successful</vdm_lustre:identifier>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:call vdm_lustre:nodeId="set_task_status">
        <vdm_lustre:argument>
            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
        </vdm_lustre:argument>
        <vdm_lustre:argument>
            <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
        </vdm_lustre:argument>
    </vdm_lustre:call>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>s_auto_task1_inprogress</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_auto_task2_started</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_auto_task2_inprogress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_auto_task2_successful</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_auto_task2_aborted</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_auto_task3_started</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_auto_task3_inprogress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_auto_task3_successful</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_auto_task3_aborted</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_RETURN_TO_LAUNCH</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:equal>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:recordProjection>
                    <vdm_lustre:recordReference>
                        <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                    </vdm_lustre:recordReference>
                    <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                </vdm_lustre:recordProjection>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:equal>
    </vdm_lustre:not>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_manual_mode</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:call vdm_lustre:nodeId="set_task_status">
                <vdm_lustre:argument>
                    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                </vdm_lustre:argument>
                <vdm_lustre:argument>
                    <vdm_lustre:identifier>Aborted</vdm_lustre:identifier>
                </vdm_lustre:argument>
            </vdm_lustre:call>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>upd_task2</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:identifier>s_auto_task2_started</vdm_lustre:identifier>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:call vdm_lustre:nodeId="set_task_status">
<vdm_lustre:argument>
    <vdm_lustre:identifier>task2</vdm_lustre:identifier>
</vdm_lustre:argument>
<vdm_lustre:argument>
    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
</vdm_lustre:argument>
                            </vdm_lustre:call>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:identifier>s_auto_task2_successful</vdm_lustre:identifier>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:call vdm_lustre:nodeId="set_task_status">
        <vdm_lustre:argument>
            <vdm_lustre:identifier>task2</vdm_lustre:identifier>
        </vdm_lustre:argument>
        <vdm_lustre:argument>
            <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
        </vdm_lustre:argument>
    </vdm_lustre:call>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>s_auto_task2_inprogress</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_auto_task1_started</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_auto_task1_inprogress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_auto_task1_successful</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_auto_task1_aborted</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_auto_task3_started</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_auto_task3_inprogress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_auto_task3_successful</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_auto_task3_aborted</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_RETURN_TO_LAUNCH</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:equal>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:recordProjection>
                    <vdm_lustre:recordReference>
                        <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                    </vdm_lustre:recordReference>
                    <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                </vdm_lustre:recordProjection>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:equal>
    </vdm_lustre:not>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_manual_mode</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>task2</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:call vdm_lustre:nodeId="set_task_status">
                <vdm_lustre:argument>
                    <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                </vdm_lustre:argument>
                <vdm_lustre:argument>
                    <vdm_lustre:identifier>Aborted</vdm_lustre:identifier>
                </vdm_lustre:argument>
            </vdm_lustre:call>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>upd_task3</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:identifier>s_auto_task3_started</vdm_lustre:identifier>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:call vdm_lustre:nodeId="set_task_status">
<vdm_lustre:argument>
    <vdm_lustre:identifier>task3</vdm_lustre:identifier>
</vdm_lustre:argument>
<vdm_lustre:argument>
    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
</vdm_lustre:argument>
                            </vdm_lustre:call>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:identifier>s_auto_task3_successful</vdm_lustre:identifier>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:call vdm_lustre:nodeId="set_task_status">
        <vdm_lustre:argument>
            <vdm_lustre:identifier>task3</vdm_lustre:identifier>
        </vdm_lustre:argument>
        <vdm_lustre:argument>
            <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
        </vdm_lustre:argument>
    </vdm_lustre:call>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>s_auto_task3_inprogress</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_auto_task1_started</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_auto_task1_inprogress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_auto_task1_successful</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_auto_task1_aborted</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_auto_task2_started</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_auto_task2_inprogress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_auto_task2_successful</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_auto_task2_aborted</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_RETURN_TO_LAUNCH</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:not>
        <vdm_lustre:equal>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:recordProjection>
                    <vdm_lustre:recordReference>
                        <vdm_lustre:identifier>task3</vdm_lustre:identifier>
                    </vdm_lustre:recordReference>
                    <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                </vdm_lustre:recordProjection>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:equal>
    </vdm_lustre:not>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_manual_mode</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>task3</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:call vdm_lustre:nodeId="set_task_status">
                <vdm_lustre:argument>
                    <vdm_lustre:identifier>task3</vdm_lustre:identifier>
                </vdm_lustre:argument>
                <vdm_lustre:argument>
                    <vdm_lustre:identifier>Aborted</vdm_lustre:identifier>
                </vdm_lustre:argument>
            </vdm_lustre:call>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>waypoint_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>s_auto_task1_started</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_auto_task1_inprogress</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_auto_task1_successful</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_auto_task1_aborted</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>waypoint</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>s_auto_task2_started</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_auto_task2_inprogress</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_auto_task2_successful</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_auto_task2_aborted</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>waypoint</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:conditionalExpression>
                <vdm_lustre:condition>
                    <vdm_lustre:or>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>s_auto_task3_started</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>s_auto_task3_inprogress</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_auto_task3_successful</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_auto_task3_aborted</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:or>
                </vdm_lustre:condition>
                <vdm_lustre:thenBranch>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task3</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>waypoint</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:thenBranch>
                <vdm_lustre:elseBranch>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_RETURN_TO_LAUNCH</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>LAUNCH_POS</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:arrow>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>LAUNCH_POS</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:pre>
        <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
    </vdm_lustre:pre>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:arrow>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:elseBranch>
            </vdm_lustre:conditionalExpression>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>payloadCMD_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>payloadCmd</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>curr_dest_reached</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:not>
                <vdm_lustre:identifier>curr_payload_performed</vdm_lustre:identifier>
            </vdm_lustre:not>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:or>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Started</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:or>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>action</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:conditionalExpression>
                <vdm_lustre:condition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:or>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Started</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:or>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:condition>
                <vdm_lustre:thenBranch>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>action</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:thenBranch>
                <vdm_lustre:elseBranch>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task1</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task2</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Successful</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:or>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task3</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Started</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>task3</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>status</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>InProgress</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:or>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>task3</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>action</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:identifier>None</vdm_lustre:identifier>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:elseBranch>
            </vdm_lustre:conditionalExpression>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:identifier>None</vdm_lustre:identifier>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="GPS" name="GPS">
        <port id="GPS.location_source_pos">
            <name>location_source_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="GPS.location_source_dir">
            <name>location_source_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="GPS.pos">
            <name>pos</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="GPS.dir">
            <name>dir</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>pos_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>pos</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>dir_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>dir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>location_source_dir</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="IRU" name="IRU">
        <port id="IRU.location_source_pos">
            <name>location_source_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="IRU.location_source_dir">
            <name>location_source_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="IRU.pos">
            <name>pos</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="IRU.dir">
            <name>dir</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>pos_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>pos</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>dir_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>dir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>location_source_dir</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="MissionPlanner" name="MissionPlanner">
        <port id="MissionPlanner.tasks">
            <name>tasks</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Tasks</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:symbol>
                <vdm_lustre:name>t1</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:recordLiteral vdm_lustre:recordType="Task.impl">
                        <vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldIdentifier>waypoint</vdm_lustre:fieldIdentifier>
                            <vdm_lustre:fieldValue>
<vdm_lustre:recordLiteral vdm_lustre:recordType="Position.impl">
    <vdm_lustre:fieldDefinition>
        <vdm_lustre:fieldIdentifier>x</vdm_lustre:fieldIdentifier>
        <vdm_lustre:fieldValue>
            <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
        </vdm_lustre:fieldValue>
    </vdm_lustre:fieldDefinition>
    <vdm_lustre:fieldDefinition>
        <vdm_lustre:fieldIdentifier>y</vdm_lustre:fieldIdentifier>
        <vdm_lustre:fieldValue>
            <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
        </vdm_lustre:fieldValue>
    </vdm_lustre:fieldDefinition>
</vdm_lustre:recordLiteral>
                            </vdm_lustre:fieldValue>
                        </vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldIdentifier>action</vdm_lustre:fieldIdentifier>
                            <vdm_lustre:fieldValue>
<vdm_lustre:identifier>Camera</vdm_lustre:identifier>
                            </vdm_lustre:fieldValue>
                        </vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldIdentifier>status</vdm_lustre:fieldIdentifier>
                            <vdm_lustre:fieldValue>
<vdm_lustre:identifier>Started</vdm_lustre:identifier>
                            </vdm_lustre:fieldValue>
                        </vdm_lustre:fieldDefinition>
                    </vdm_lustre:recordLiteral>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>t2</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:recordLiteral vdm_lustre:recordType="Task.impl">
                        <vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldIdentifier>waypoint</vdm_lustre:fieldIdentifier>
                            <vdm_lustre:fieldValue>
<vdm_lustre:recordLiteral vdm_lustre:recordType="Position.impl">
    <vdm_lustre:fieldDefinition>
        <vdm_lustre:fieldIdentifier>x</vdm_lustre:fieldIdentifier>
        <vdm_lustre:fieldValue>
            <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
        </vdm_lustre:fieldValue>
    </vdm_lustre:fieldDefinition>
    <vdm_lustre:fieldDefinition>
        <vdm_lustre:fieldIdentifier>y</vdm_lustre:fieldIdentifier>
        <vdm_lustre:fieldValue>
            <vdm_lustre:intLiteral>2</vdm_lustre:intLiteral>
        </vdm_lustre:fieldValue>
    </vdm_lustre:fieldDefinition>
</vdm_lustre:recordLiteral>
                            </vdm_lustre:fieldValue>
                        </vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldIdentifier>action</vdm_lustre:fieldIdentifier>
                            <vdm_lustre:fieldValue>
<vdm_lustre:identifier>Weapon</vdm_lustre:identifier>
                            </vdm_lustre:fieldValue>
                        </vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldIdentifier>status</vdm_lustre:fieldIdentifier>
                            <vdm_lustre:fieldValue>
<vdm_lustre:identifier>Started</vdm_lustre:identifier>
                            </vdm_lustre:fieldValue>
                        </vdm_lustre:fieldDefinition>
                    </vdm_lustre:recordLiteral>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>t3</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:recordLiteral vdm_lustre:recordType="Task.impl">
                        <vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldIdentifier>waypoint</vdm_lustre:fieldIdentifier>
                            <vdm_lustre:fieldValue>
<vdm_lustre:recordLiteral vdm_lustre:recordType="Position.impl">
    <vdm_lustre:fieldDefinition>
        <vdm_lustre:fieldIdentifier>x</vdm_lustre:fieldIdentifier>
        <vdm_lustre:fieldValue>
            <vdm_lustre:intLiteral>2</vdm_lustre:intLiteral>
        </vdm_lustre:fieldValue>
    </vdm_lustre:fieldDefinition>
    <vdm_lustre:fieldDefinition>
        <vdm_lustre:fieldIdentifier>y</vdm_lustre:fieldIdentifier>
        <vdm_lustre:fieldValue>
            <vdm_lustre:intLiteral>2</vdm_lustre:intLiteral>
        </vdm_lustre:fieldValue>
    </vdm_lustre:fieldDefinition>
</vdm_lustre:recordLiteral>
                            </vdm_lustre:fieldValue>
                        </vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldIdentifier>action</vdm_lustre:fieldIdentifier>
                            <vdm_lustre:fieldValue>
<vdm_lustre:identifier>Land</vdm_lustre:identifier>
                            </vdm_lustre:fieldValue>
                        </vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldIdentifier>status</vdm_lustre:fieldIdentifier>
                            <vdm_lustre:fieldValue>
<vdm_lustre:identifier>Started</vdm_lustre:identifier>
                            </vdm_lustre:fieldValue>
                        </vdm_lustre:fieldDefinition>
                    </vdm_lustre:recordLiteral>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>tasks_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>tasks</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:recordLiteral vdm_lustre:recordType="Tasks.impl">
<vdm_lustre:fieldDefinition>
    <vdm_lustre:fieldIdentifier>task1</vdm_lustre:fieldIdentifier>
    <vdm_lustre:fieldValue>
        <vdm_lustre:identifier>t1</vdm_lustre:identifier>
    </vdm_lustre:fieldValue>
</vdm_lustre:fieldDefinition>
<vdm_lustre:fieldDefinition>
    <vdm_lustre:fieldIdentifier>task2</vdm_lustre:fieldIdentifier>
    <vdm_lustre:fieldValue>
        <vdm_lustre:identifier>t2</vdm_lustre:identifier>
    </vdm_lustre:fieldValue>
</vdm_lustre:fieldDefinition>
<vdm_lustre:fieldDefinition>
    <vdm_lustre:fieldIdentifier>task3</vdm_lustre:fieldIdentifier>
    <vdm_lustre:fieldValue>
        <vdm_lustre:identifier>t3</vdm_lustre:identifier>
    </vdm_lustre:fieldValue>
</vdm_lustre:fieldDefinition>
                            </vdm_lustre:recordLiteral>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="Mixer" name="Mixer">
        <port id="Mixer.mstate">
            <name>mstate</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Mixer.moveRC">
            <name>moveRC</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Mixer.moveNav">
            <name>moveNav</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Mixer.currentDir">
            <name>currentDir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Mixer.cmd">
            <name>cmd</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:symbol>
                <vdm_lustre:name>move</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_MANUAL_FLIGHT_MODE</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>moveRC</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:identifier>moveNav</vdm_lustre:identifier>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>cmd_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>move</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Move_Forward</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>North</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>IncreaseY</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>move</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Move_Forward</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>South</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>DecreaseY</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:conditionalExpression>
                <vdm_lustre:condition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>move</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>Move_Forward</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>East</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:condition>
                <vdm_lustre:thenBranch>
                    <vdm_lustre:identifier>IncreaseX</vdm_lustre:identifier>
                </vdm_lustre:thenBranch>
                <vdm_lustre:elseBranch>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>move</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Move_Forward</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>West</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>DecreaseX</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>move</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>North</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>IncreaseYaw</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>move</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>East</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>IncreaseYaw</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:conditionalExpression>
                <vdm_lustre:condition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>move</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>South</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:condition>
                <vdm_lustre:thenBranch>
                    <vdm_lustre:identifier>IncreaseYaw</vdm_lustre:identifier>
                </vdm_lustre:thenBranch>
                <vdm_lustre:elseBranch>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>move</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>West</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>IncreaseYaw</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>move</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>North</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>DecreaseYaw</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>move</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>West</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>DecreaseYaw</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:conditionalExpression>
                <vdm_lustre:condition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>move</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>South</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:condition>
                <vdm_lustre:thenBranch>
                    <vdm_lustre:identifier>DecreaseYaw</vdm_lustre:identifier>
                </vdm_lustre:thenBranch>
                <vdm_lustre:elseBranch>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>move</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>East</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>DecreaseYaw</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:identifier>NoChange</vdm_lustre:identifier>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:elseBranch>
            </vdm_lustre:conditionalExpression>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:elseBranch>
            </vdm_lustre:conditionalExpression>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:elseBranch>
            </vdm_lustre:conditionalExpression>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="Navigator" name="Navigator">
        <port id="Navigator.currentPos">
            <name>currentPos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Navigator.waypoint">
            <name>waypoint</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Navigator.currentDir">
            <name>currentDir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Navigator.move">
            <name>move</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Navigator.dest_reached">
            <name>dest_reached</name>
            <mode>out</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
        <contract>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>move_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>move</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>North</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:lessThan>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:lessThan>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>Move_Forward</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>South</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:greaterThan>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:greaterThan>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>Move_Forward</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:conditionalExpression>
                <vdm_lustre:condition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>East</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:lessThan>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:lessThan>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:condition>
                <vdm_lustre:thenBranch>
                    <vdm_lustre:identifier>Move_Forward</vdm_lustre:identifier>
                </vdm_lustre:thenBranch>
                <vdm_lustre:elseBranch>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>West</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:greaterThan>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:greaterThan>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>Move_Forward</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>North</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:lessThan>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:lessThan>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>South</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:lessThan>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:lessThan>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:conditionalExpression>
                <vdm_lustre:condition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>West</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:lessThan>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:lessThan>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:condition>
                <vdm_lustre:thenBranch>
                    <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
                </vdm_lustre:thenBranch>
                <vdm_lustre:elseBranch>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>North</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:greaterThan>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:greaterThan>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>South</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:greaterThan>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:greaterThan>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>East</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:greaterThan>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:greaterThan>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:conditionalExpression>
                <vdm_lustre:condition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>South</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:lessThan>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:lessThan>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:condition>
                <vdm_lustre:thenBranch>
                    <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
                </vdm_lustre:thenBranch>
                <vdm_lustre:elseBranch>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>West</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:lessThan>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:lessThan>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>East</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:lessThan>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:lessThan>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>North</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:greaterThan>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:greaterThan>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:conditionalExpression>
                <vdm_lustre:condition>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>West</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:greaterThan>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:greaterThan>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:condition>
                <vdm_lustre:thenBranch>
                    <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
                </vdm_lustre:thenBranch>
                <vdm_lustre:elseBranch>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>East</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:greaterThan>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:greaterThan>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:notEqual>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:notEqual>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:notEqual>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:notEqual>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>Turn_Right</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:identifier>Stop</vdm_lustre:identifier>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:elseBranch>
            </vdm_lustre:conditionalExpression>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:elseBranch>
            </vdm_lustre:conditionalExpression>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:elseBranch>
            </vdm_lustre:conditionalExpression>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:elseBranch>
            </vdm_lustre:conditionalExpression>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>dest_reached_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>dest_reached</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>waypoint</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="PositionEstimator" name="PositionEstimator">
        <port id="PositionEstimator.voted_pos">
            <name>voted_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="PositionEstimator.voted_dir">
            <name>voted_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="PositionEstimator.currentPos">
            <name>currentPos</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="PositionEstimator.currentDir">
            <name>currentDir</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>currentPos_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>currentPos</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>voted_pos</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>currentDir_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>currentDir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>voted_dir</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="RCReceiver" name="RCReceiver">
        <port id="RCReceiver.rcv_payloadCMD">
            <name>rcv_payloadCMD</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="RCReceiver.rcv_move">
            <name>rcv_move</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="RCReceiver.rcv_uavMode">
            <name>rcv_uavMode</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="RCReceiver.normal">
            <name>normal</name>
            <mode>out</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
        <port id="RCReceiver.payloadCMD">
            <name>payloadCMD</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="RCReceiver.move">
            <name>move</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="RCReceiver.uavMode">
            <name>uavMode</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>payloadCMD_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>payloadCMD</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>rcv_payloadCMD</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>move_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>move</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>rcv_move</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>uavMode_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>uavMode</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>rcv_uavMode</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>normal_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>normal</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:boolLiteral>true</vdm_lustre:boolLiteral>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="RCReceiverHealthCheck" name="RCReceiverHealthCheck">
        <port id="RCReceiverHealthCheck.normal">
            <name>normal</name>
            <mode>in</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
        <port id="RCReceiverHealthCheck.ATE6">
            <name>ATE6</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>ATE6Type</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:symbol>
                <vdm_lustre:name>next_ATE6</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>ATE6Type</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:lessThanOrEqualTo>
<vdm_lustre:lhsOperand>
    <vdm_lustre:call vdm_lustre:nodeId="duration">
        <vdm_lustre:argument>
            <vdm_lustre:identifier>normal</vdm_lustre:identifier>
        </vdm_lustre:argument>
    </vdm_lustre:call>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>RC_RECEIVER_TOLERANCE_LEVEL</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:lessThanOrEqualTo>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>RC_Normal</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:identifier>RC_Abnormal</vdm_lustre:identifier>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>ATE6_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>ATE6</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:arrow>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>RC_Normal</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:pre>
        <vdm_lustre:identifier>next_ATE6</vdm_lustre:identifier>
    </vdm_lustre:pre>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:arrow>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="StateController" name="StateController">
        <port id="StateController.ATE6">
            <name>ATE6</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>ATE6Type</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="StateController.ATE7">
            <name>ATE7</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>ATE7Type</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="StateController.uavMode">
            <name>uavMode</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="StateController.mstate">
            <name>mstate</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>mstate_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>ATE7</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>Adequate</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>ATE6</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>RC_Normal</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>uavMode</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:identifier>s_RETURN_TO_LAUNCH</vdm_lustre:identifier>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="TriplexVoter" name="TriplexVoter">
        <port id="TriplexVoter.gps_pos">
            <name>gps_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.dme_vor_pos">
            <name>dme_vor_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.iru_pos">
            <name>iru_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.gps_dir">
            <name>gps_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.dme_vor_dir">
            <name>dme_vor_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.iru_dir">
            <name>iru_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.voted_pos">
            <name>voted_pos</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.voted_dir">
            <name>voted_dir</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <contract>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>voted_pos_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>voted_pos</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:call vdm_lustre:nodeId="is_equal">
        <vdm_lustre:argument>
            <vdm_lustre:identifier>gps_pos</vdm_lustre:identifier>
        </vdm_lustre:argument>
        <vdm_lustre:argument>
            <vdm_lustre:identifier>dme_vor_pos</vdm_lustre:identifier>
        </vdm_lustre:argument>
    </vdm_lustre:call>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>gps_pos</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:call vdm_lustre:nodeId="is_equal">
                <vdm_lustre:argument>
                    <vdm_lustre:identifier>gps_pos</vdm_lustre:identifier>
                </vdm_lustre:argument>
                <vdm_lustre:argument>
                    <vdm_lustre:identifier>iru_pos</vdm_lustre:identifier>
                </vdm_lustre:argument>
            </vdm_lustre:call>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>gps_pos</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:identifier>dme_vor_pos</vdm_lustre:identifier>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>voted_dir_Def</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>voted_dir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:conditionalExpression>
<vdm_lustre:condition>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>gps_dir</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>dme_vor_dir</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:condition>
<vdm_lustre:thenBranch>
    <vdm_lustre:identifier>gps_dir</vdm_lustre:identifier>
</vdm_lustre:thenBranch>
<vdm_lustre:elseBranch>
    <vdm_lustre:conditionalExpression>
        <vdm_lustre:condition>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>gps_dir</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>iru_dir</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:condition>
        <vdm_lustre:thenBranch>
            <vdm_lustre:identifier>gps_dir</vdm_lustre:identifier>
        </vdm_lustre:thenBranch>
        <vdm_lustre:elseBranch>
            <vdm_lustre:identifier>dme_vor_dir</vdm_lustre:identifier>
        </vdm_lustre:elseBranch>
    </vdm_lustre:conditionalExpression>
</vdm_lustre:elseBranch>
                            </vdm_lustre:conditionalExpression>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="UAVSystem" name="UAVSystem">
        <port id="UAVSystem.location_source_pos">
            <name>location_source_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.location_source_dir">
            <name>location_source_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.rcv_payloadCMD">
            <name>rcv_payloadCMD</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.rcv_move">
            <name>rcv_move</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.rcv_uavMode">
            <name>rcv_uavMode</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.cmd">
            <name>cmd</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.currentPos">
            <name>currentPos</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.payloadCmdFC">
            <name>payloadCmdFC</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.payloadCmdRC">
            <name>payloadCmdRC</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.mstate">
            <name>mstate</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.tasks">
            <name>tasks</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Tasks</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="UAVSystem.payload_performed">
            <name>payload_performed</name>
            <mode>out</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
        <contract>
            <vdm_lustre:symbol>
                <vdm_lustre:name>picture_waypoint</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>tasks</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>task1</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>waypoint</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>bomb_waypoint</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>tasks</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>task2</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>waypoint</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>destination_waypoint</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:recordProjection>
                        <vdm_lustre:recordReference>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>tasks</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>task3</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:recordReference>
                        <vdm_lustre:fieldId>waypoint</vdm_lustre:fieldId>
                    </vdm_lustre:recordProjection>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:symbol>
                <vdm_lustre:name>payloadCMD</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
                <vdm_lustre:definition>
                    <vdm_lustre:conditionalExpression>
                        <vdm_lustre:condition>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>s_MANUAL_FLIGHT_MODE</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:condition>
                        <vdm_lustre:thenBranch>
                            <vdm_lustre:identifier>payloadCmdRC</vdm_lustre:identifier>
                        </vdm_lustre:thenBranch>
                        <vdm_lustre:elseBranch>
                            <vdm_lustre:identifier>payloadCmdFC</vdm_lustre:identifier>
                        </vdm_lustre:elseBranch>
                    </vdm_lustre:conditionalExpression>
                </vdm_lustre:definition>
            </vdm_lustre:symbol>
            <vdm_lustre:assume>
                <vdm_lustre:name>location_source_Pos_Simulated_Value</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:call vdm_lustre:nodeId="LocationSource_Pos">
<vdm_lustre:argument>
    <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
</vdm_lustre:argument>
                            </vdm_lustre:call>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:assume>
            <vdm_lustre:assume>
                <vdm_lustre:name>location_source_Dir_Simulated_Value</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>location_source_dir</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:call vdm_lustre:nodeId="LocationSource_Dir">
<vdm_lustre:argument>
    <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
</vdm_lustre:argument>
                            </vdm_lustre:call>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:assume>
            <vdm_lustre:assume>
                <vdm_lustre:name>rcv_uavMode_Simulated_Value</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>rcv_uavMode</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:assume>
            <vdm_lustre:assume>
                <vdm_lustre:name>rcv_payloadCMD_Simulated_Value</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>rcv_payloadCMD</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:call vdm_lustre:nodeId="RemoteOperatorController_payloadCMD"/>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:assume>
            <vdm_lustre:assume>
                <vdm_lustre:name>rcv_move_Simulated_Value</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>rcv_move</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:call vdm_lustre:nodeId="RemoteOperatorController_Move"/>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:expression>
            </vdm_lustre:assume>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>a_picture_only_in_task1_waypoint</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>payload_performed</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>payloadCMD</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Camera</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:call vdm_lustre:nodeId="is_equal">
<vdm_lustre:argument>
    <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
</vdm_lustre:argument>
<vdm_lustre:argument>
    <vdm_lustre:identifier>picture_waypoint</vdm_lustre:identifier>
</vdm_lustre:argument>
                            </vdm_lustre:call>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>b_weapon_only_in_task2_waypoint</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>payload_performed</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>payloadCMD</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Weapon</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:call vdm_lustre:nodeId="is_equal">
<vdm_lustre:argument>
    <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
</vdm_lustre:argument>
<vdm_lustre:argument>
    <vdm_lustre:identifier>bomb_waypoint</vdm_lustre:identifier>
</vdm_lustre:argument>
                            </vdm_lustre:call>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>c_not_taking_picture_on_arbitrary_location</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>payload_performed</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>payloadCMD</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Camera</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:not>
<vdm_lustre:call vdm_lustre:nodeId="is_equal">
    <vdm_lustre:argument>
        <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
    </vdm_lustre:argument>
    <vdm_lustre:argument>
        <vdm_lustre:recordLiteral vdm_lustre:recordType="Position.impl">
            <vdm_lustre:fieldDefinition>
                <vdm_lustre:fieldIdentifier>x</vdm_lustre:fieldIdentifier>
                <vdm_lustre:fieldValue>
                    <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
                </vdm_lustre:fieldValue>
            </vdm_lustre:fieldDefinition>
            <vdm_lustre:fieldDefinition>
                <vdm_lustre:fieldIdentifier>y</vdm_lustre:fieldIdentifier>
                <vdm_lustre:fieldValue>
                    <vdm_lustre:intLiteral>2</vdm_lustre:intLiteral>
                </vdm_lustre:fieldValue>
            </vdm_lustre:fieldDefinition>
        </vdm_lustre:recordLiteral>
    </vdm_lustre:argument>
</vdm_lustre:call>
                            </vdm_lustre:not>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>d_not_releasing_weapon_on_arbitrary_location</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_AUTO_FLIGHT_MODE</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>payload_performed</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>payloadCMD</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Weapon</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:not>
<vdm_lustre:call vdm_lustre:nodeId="is_equal">
    <vdm_lustre:argument>
        <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
    </vdm_lustre:argument>
    <vdm_lustre:argument>
        <vdm_lustre:recordLiteral vdm_lustre:recordType="Position.impl">
            <vdm_lustre:fieldDefinition>
                <vdm_lustre:fieldIdentifier>x</vdm_lustre:fieldIdentifier>
                <vdm_lustre:fieldValue>
                    <vdm_lustre:intLiteral>2</vdm_lustre:intLiteral>
                </vdm_lustre:fieldValue>
            </vdm_lustre:fieldDefinition>
            <vdm_lustre:fieldDefinition>
                <vdm_lustre:fieldIdentifier>y</vdm_lustre:fieldIdentifier>
                <vdm_lustre:fieldValue>
                    <vdm_lustre:intLiteral>2</vdm_lustre:intLiteral>
                </vdm_lustre:fieldValue>
            </vdm_lustre:fieldDefinition>
        </vdm_lustre:recordLiteral>
    </vdm_lustre:argument>
</vdm_lustre:call>
                            </vdm_lustre:not>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>e_appropriate_movement</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:arrow>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:boolLiteral>true</vdm_lustre:boolLiteral>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:pre>
                <vdm_lustre:recordProjection>
                    <vdm_lustre:recordReference>
                        <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                    </vdm_lustre:recordReference>
                    <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                </vdm_lustre:recordProjection>
            </vdm_lustre:pre>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:plus>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:pre>
                        <vdm_lustre:recordProjection>
                            <vdm_lustre:recordReference>
<vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                            </vdm_lustre:recordReference>
                            <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                        </vdm_lustre:recordProjection>
                    </vdm_lustre:pre>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:plus>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:pre>
        <vdm_lustre:identifier>location_source_dir</vdm_lustre:identifier>
    </vdm_lustre:pre>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>North</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:plus>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:pre>
                        <vdm_lustre:recordProjection>
                            <vdm_lustre:recordReference>
<vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                            </vdm_lustre:recordReference>
                            <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                        </vdm_lustre:recordProjection>
                    </vdm_lustre:pre>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:plus>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:recordProjection>
                <vdm_lustre:recordReference>
                    <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                </vdm_lustre:recordReference>
                <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
            </vdm_lustre:recordProjection>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:pre>
                <vdm_lustre:recordProjection>
                    <vdm_lustre:recordReference>
                        <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                    </vdm_lustre:recordReference>
                    <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                </vdm_lustre:recordProjection>
            </vdm_lustre:pre>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:pre>
        <vdm_lustre:identifier>location_source_dir</vdm_lustre:identifier>
    </vdm_lustre:pre>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>East</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:implies>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:and>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:minus>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:pre>
                <vdm_lustre:recordProjection>
                    <vdm_lustre:recordReference>
                        <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
                    </vdm_lustre:recordReference>
                    <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                </vdm_lustre:recordProjection>
            </vdm_lustre:pre>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:minus>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:pre>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:pre>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:and>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:pre>
<vdm_lustre:identifier>location_source_dir</vdm_lustre:identifier>
                            </vdm_lustre:pre>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>West</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:implies>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:implies>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:and>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:pre>
<vdm_lustre:recordProjection>
    <vdm_lustre:recordReference>
        <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
    </vdm_lustre:recordReference>
    <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
</vdm_lustre:recordProjection>
                            </vdm_lustre:pre>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:recordProjection>
<vdm_lustre:recordReference>
    <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
</vdm_lustre:recordReference>
<vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                            </vdm_lustre:recordProjection>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:minus>
<vdm_lustre:lhsOperand>
    <vdm_lustre:pre>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:pre>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:minus>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:and>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:pre>
                        <vdm_lustre:identifier>location_source_dir</vdm_lustre:identifier>
                    </vdm_lustre:pre>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>South</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:implies>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:arrow>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>f_picture_only_in_PILOT_TARGET_POSITION</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:and>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:call vdm_lustre:nodeId="sofar">
                <vdm_lustre:argument>
                    <vdm_lustre:equal>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:identifier>s_MANUAL_FLIGHT_MODE</vdm_lustre:identifier>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:equal>
                </vdm_lustre:argument>
            </vdm_lustre:call>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>payload_performed</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:and>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:equal>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>payloadCMD</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:identifier>Camera</vdm_lustre:identifier>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:equal>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:call vdm_lustre:nodeId="is_equal">
<vdm_lustre:argument>
    <vdm_lustre:identifier>location_source_pos</vdm_lustre:identifier>
</vdm_lustre:argument>
<vdm_lustre:argument>
    <vdm_lustre:identifier>PILOT_TARGET_POSITION</vdm_lustre:identifier>
</vdm_lustre:argument>
                            </vdm_lustre:call>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
            <vdm_lustre:guarantee>
                <vdm_lustre:name>g_pilot_only_takes_picture</vdm_lustre:name>
                <vdm_lustre:expression>
                    <vdm_lustre:implies>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:and>
<vdm_lustre:lhsOperand>
    <vdm_lustre:call vdm_lustre:nodeId="sofar">
        <vdm_lustre:argument>
            <vdm_lustre:equal>
                <vdm_lustre:lhsOperand>
                    <vdm_lustre:identifier>mstate</vdm_lustre:identifier>
                </vdm_lustre:lhsOperand>
                <vdm_lustre:rhsOperand>
                    <vdm_lustre:identifier>s_MANUAL_FLIGHT_MODE</vdm_lustre:identifier>
                </vdm_lustre:rhsOperand>
            </vdm_lustre:equal>
        </vdm_lustre:argument>
    </vdm_lustre:call>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>payload_performed</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:and>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:equal>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>payloadCMD</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:identifier>Camera</vdm_lustre:identifier>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:equal>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:implies>
                </vdm_lustre:expression>
            </vdm_lustre:guarantee>
        </contract>
    </componentType>
    <componentType id="battery_health_check_Inst_state_controller_ATE7" name="battery_health_check_Inst_state_controller_ATE7">
        <port id="BatteryHealthCheck.ATE7">
            <name>ATE7</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>ATE7Type</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="StateController.ATE7">
            <name>ATE7</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>ATE7Type</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="flight_controller_Inst_actuators_payloadCmdFC" name="flight_controller_Inst_actuators_payloadCmdFC">
        <port id="FlightController.payloadCmd">
            <name>payloadCmd</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Actuators.payloadCmdFC">
            <name>payloadCmdFC</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="flight_controller_Inst_navigator_waypoint" name="flight_controller_Inst_navigator_waypoint">
        <port id="FlightController.waypoint">
            <name>waypoint</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Navigator.waypoint">
            <name>waypoint</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="gps_Inst_triplex_voter_gps_pos" name="gps_Inst_triplex_voter_gps_pos">
        <port id="GPS.pos">
            <name>pos</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.gps_pos">
            <name>gps_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="gps_Inst_triplex_voter_gps_dir" name="gps_Inst_triplex_voter_gps_dir">
        <port id="GPS.dir">
            <name>dir</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.gps_dir">
            <name>gps_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="dme_vor_Inst_triplex_voter_dme_vor_pos" name="dme_vor_Inst_triplex_voter_dme_vor_pos">
        <port id="DME_VOR.pos">
            <name>pos</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.dme_vor_pos">
            <name>dme_vor_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="dme_vor_Inst_triplex_voter_dme_vor_dir" name="dme_vor_Inst_triplex_voter_dme_vor_dir">
        <port id="DME_VOR.dir">
            <name>dir</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.dme_vor_dir">
            <name>dme_vor_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="iru_Inst_triplex_voter_iru_pos" name="iru_Inst_triplex_voter_iru_pos">
        <port id="IRU.pos">
            <name>pos</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.iru_pos">
            <name>iru_pos</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="iru_Inst_triplex_voter_iru_dir" name="iru_Inst_triplex_voter_iru_dir">
        <port id="IRU.dir">
            <name>dir</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="TriplexVoter.iru_dir">
            <name>iru_dir</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="navigator_Inst_mixer_moveNav" name="navigator_Inst_mixer_moveNav">
        <port id="Navigator.move">
            <name>move</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Mixer.moveNav">
            <name>moveNav</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="navigator_Inst_flight_controller_dest_reached" name="navigator_Inst_flight_controller_dest_reached">
        <port id="Navigator.dest_reached">
            <name>dest_reached</name>
            <mode>out</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
        <port id="FlightController.dest_reached">
            <name>dest_reached</name>
            <mode>in</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
    </componentType>
    <componentType id="RC_receiver_Inst_RC_receiver_health_check_normal" name="RC_receiver_Inst_RC_receiver_health_check_normal">
        <port id="RCReceiver.normal">
            <name>normal</name>
            <mode>out</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
        <port id="RCReceiverHealthCheck.normal">
            <name>normal</name>
            <mode>in</mode>
            <type>
                <vdm_data:plainType>bool</vdm_data:plainType>
            </type>
        </port>
    </componentType>
    <componentType id="RC_receiver_Inst_actuators_payloadCmdRC" name="RC_receiver_Inst_actuators_payloadCmdRC">
        <port id="RCReceiver.payloadCMD">
            <name>payloadCMD</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Actuators.payloadCmdRC">
            <name>payloadCmdRC</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="RC_receiver_Inst_mixer_moveRC" name="RC_receiver_Inst_mixer_moveRC">
        <port id="RCReceiver.move">
            <name>move</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="Mixer.moveRC">
            <name>moveRC</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="RC_receiver_Inst_state_controller_uavMode" name="RC_receiver_Inst_state_controller_uavMode">
        <port id="RCReceiver.uavMode">
            <name>uavMode</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="StateController.uavMode">
            <name>uavMode</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>UAVState</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentType id="RC_receiver_health_check_Inst_state_controller_ATE6" name="RC_receiver_health_check_Inst_state_controller_ATE6">
        <port id="RCReceiverHealthCheck.ATE6">
            <name>ATE6</name>
            <mode>out</mode>
            <type>
                <vdm_data:userDefinedType>ATE6Type</vdm_data:userDefinedType>
            </type>
        </port>
        <port id="StateController.ATE6">
            <name>ATE6</name>
            <mode>in</mode>
            <type>
                <vdm_data:userDefinedType>ATE6Type</vdm_data:userDefinedType>
            </type>
        </port>
    </componentType>
    <componentImpl id="UAVSystem.Impl" type="UAVSystem" name="UAVSystem.Impl">
        <blockImpl>
            <subcomponent id="actuators" name="actuators" category="Actuators" component_type="Hybrid" situated="OnBoard" manufacturer="InHouse" insideTrustedBoundary="true">
                <specification>Actuators</specification>
            </subcomponent>
            <subcomponent id="battery_health_check" name="battery_health_check" category="BatteryHealthChecker" component_type="Software" situated="OnBoard" manufacturer="ThirdParty" insideTrustedBoundary="true">
                <specification>BatteryHealthCheck</specification>
            </subcomponent>
            <subcomponent id="flight_controller" name="flight_controller" category="FlightController" component_type="Software" situated="OnBoard" manufacturer="ThirdParty" insideTrustedBoundary="true">
                <specification>FlightController</specification>
            </subcomponent>
            <subcomponent id="gps" name="gps" heterogeneity="true" anti_jamming="true" heterogeneity_dal="7" anti_jamming_dal="7" category="GPS" component_type="Hybrid" situated="OnBoard" manufacturer="ThirdParty" insideTrustedBoundary="true" broadcastFromOutsideTB="true">
                <specification>GPS</specification>
            </subcomponent>
            <subcomponent id="dme_vor" name="dme_vor" heterogeneity="true" anti_jamming="true" heterogeneity_dal="7" anti_jamming_dal="7" category="DME_VOR" component_type="Hybrid" situated="OnBoard" manufacturer="ThirdParty" insideTrustedBoundary="true" broadcastFromOutsideTB="true">
                <specification>DME_VOR</specification>
            </subcomponent>
            <subcomponent id="iru" name="iru" heterogeneity="true" heterogeneity_dal="7" category="IRU" component_type="Hybrid" situated="OnBoard" manufacturer="ThirdParty" insideTrustedBoundary="true">
                <specification>IRU</specification>
            </subcomponent>
            <subcomponent id="triplex_voter" name="triplex_voter" category="TriplexVoter" component_type="Software" situated="OnBoard" manufacturer="InHouse" insideTrustedBoundary="true">
                <specification>TriplexVoter</specification>
            </subcomponent>
            <subcomponent id="mission_planner" name="mission_planner" category="MissionPlanner" component_type="Software" situated="OnBoard" manufacturer="InHouse" hasSensitiveInfo="true" insideTrustedBoundary="true">
                <specification>MissionPlanner</specification>
            </subcomponent>
            <subcomponent id="mixer" name="mixer" category="Mixer" component_type="Software" situated="OnBoard" manufacturer="InHouse" insideTrustedBoundary="true">
                <specification>Mixer</specification>
            </subcomponent>
            <subcomponent id="navigator" name="navigator" category="Navigator" component_type="Software" situated="OnBoard" manufacturer="ThirdParty" insideTrustedBoundary="true">
                <specification>Navigator</specification>
            </subcomponent>
            <subcomponent id="position_estimator" name="position_estimator" category="PositionEstimator" component_type="Software" situated="OnBoard" manufacturer="InHouse" insideTrustedBoundary="true">
                <specification>PositionEstimator</specification>
            </subcomponent>
            <subcomponent id="RC_receiver" name="RC_receiver" anti_jamming="true" anti_flooding="true" anti_fuzzing="true" anti_jamming_dal="7" anti_flooding_dal="7" anti_fuzzing_dal="7" category="RCReceiver" component_type="Hybrid" situated="OnBoard" manufacturer="ThirdParty" insideTrustedBoundary="true" wifiFromOutsideTB="false">
                <specification>RCReceiver</specification>
            </subcomponent>
            <subcomponent id="RC_receiver_health_check" name="RC_receiver_health_check" category="RCReceiverHealthChecker" component_type="Software" situated="OnBoard" manufacturer="ThirdParty" insideTrustedBoundary="true">
                <specification>RCReceiverHealthCheck</specification>
            </subcomponent>
            <subcomponent id="state_controller" name="state_controller" category="StateController" component_type="Software" situated="OnBoard" manufacturer="InHouse" insideTrustedBoundary="true">
                <specification>StateController</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet15" name="instrumented_channel_ethernet15">
                <specification>battery_health_check_Inst_state_controller_ATE7</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet8" name="instrumented_channel_ethernet8">
                <specification>flight_controller_Inst_actuators_payloadCmdFC</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet7" name="instrumented_channel_ethernet7">
                <specification>flight_controller_Inst_navigator_waypoint</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet29_A" name="instrumented_channel_ethernet29_A">
                <specification>gps_Inst_triplex_voter_gps_pos</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet30_A" name="instrumented_channel_ethernet30_A">
                <specification>gps_Inst_triplex_voter_gps_dir</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet29_B" name="instrumented_channel_ethernet29_B">
                <specification>dme_vor_Inst_triplex_voter_dme_vor_pos</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet30_B" name="instrumented_channel_ethernet30_B">
                <specification>dme_vor_Inst_triplex_voter_dme_vor_dir</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet29_C" name="instrumented_channel_ethernet29_C">
                <specification>iru_Inst_triplex_voter_iru_pos</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet30_C" name="instrumented_channel_ethernet30_C">
                <specification>iru_Inst_triplex_voter_iru_dir</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet6" name="instrumented_channel_ethernet6">
                <specification>navigator_Inst_mixer_moveNav</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet5" name="instrumented_channel_ethernet5">
                <specification>navigator_Inst_flight_controller_dest_reached</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet10" name="instrumented_channel_ethernet10">
                <specification>RC_receiver_Inst_RC_receiver_health_check_normal</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet17" name="instrumented_channel_ethernet17">
                <specification>RC_receiver_Inst_actuators_payloadCmdRC</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet18" name="instrumented_channel_ethernet18">
                <specification>RC_receiver_Inst_mixer_moveRC</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet19" name="instrumented_channel_ethernet19">
                <specification>RC_receiver_Inst_state_controller_uavMode</specification>
            </subcomponent>
            <subcomponent id="instrumented_channel_ethernet11" name="instrumented_channel_ethernet11">
                <specification>RC_receiver_health_check_Inst_state_controller_ATE6</specification>
            </subcomponent>
            <connection name="wireless1" flow="Control" data_encrypted="true" authenticated="true" conn_type="Remote">
                <source>
                    <componentPort>UAVSystem.rcv_payloadCMD</componentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>RC_receiver</subcomponent>
                        <port>RCReceiver.rcv_payloadCMD</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="wireless2" flow="Control" data_encrypted="true" authenticated="true" conn_type="Remote">
                <source>
                    <componentPort>UAVSystem.rcv_move</componentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>RC_receiver</subcomponent>
                        <port>RCReceiver.rcv_move</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="wireless3" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Remote">
                <source>
                    <componentPort>UAVSystem.rcv_uavMode</componentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>RC_receiver</subcomponent>
                        <port>RCReceiver.rcv_uavMode</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="wireless4_A" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Remote">
                <source>
                    <componentPort>UAVSystem.location_source_pos</componentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>gps</subcomponent>
                        <port>GPS.location_source_pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="wireless5_A" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Remote">
                <source>
                    <componentPort>UAVSystem.location_source_dir</componentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>gps</subcomponent>
                        <port>GPS.location_source_dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="wireless4_B" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Remote">
                <source>
                    <componentPort>UAVSystem.location_source_pos</componentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>dme_vor</subcomponent>
                        <port>DME_VOR.location_source_pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="wireless5_B" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Remote">
                <source>
                    <componentPort>UAVSystem.location_source_dir</componentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>dme_vor</subcomponent>
                        <port>DME_VOR.location_source_dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="wireless4_C" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Remote">
                <source>
                    <componentPort>UAVSystem.location_source_pos</componentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>iru</subcomponent>
                        <port>IRU.location_source_pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="wireless5_C" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Remote">
                <source>
                    <componentPort>UAVSystem.location_source_dir</componentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>iru</subcomponent>
                        <port>IRU.location_source_dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet1" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>triplex_voter</subcomponent>
                        <port>TriplexVoter.voted_pos</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>position_estimator</subcomponent>
                        <port>PositionEstimator.voted_pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet2" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>triplex_voter</subcomponent>
                        <port>TriplexVoter.voted_dir</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>position_estimator</subcomponent>
                        <port>PositionEstimator.voted_dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet3" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>position_estimator</subcomponent>
                        <port>PositionEstimator.currentPos</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>navigator</subcomponent>
                        <port>Navigator.currentPos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet4A" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>position_estimator</subcomponent>
                        <port>PositionEstimator.currentDir</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>navigator</subcomponent>
                        <port>Navigator.currentDir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet4B" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>position_estimator</subcomponent>
                        <port>PositionEstimator.currentDir</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>mixer</subcomponent>
                        <port>Mixer.currentDir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet5" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>navigator</subcomponent>
                        <port>Navigator.dest_reached</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet5</subcomponent>
                        <port>Navigator.dest_reached</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet6" flow="Xdata" data_encrypted="false" authenticated="false" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>navigator</subcomponent>
                        <port>Navigator.move</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet6</subcomponent>
                        <port>Navigator.move</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet7" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>flight_controller</subcomponent>
                        <port>FlightController.waypoint</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet7</subcomponent>
                        <port>FlightController.waypoint</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet8" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>flight_controller</subcomponent>
                        <port>FlightController.payloadCmd</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet8</subcomponent>
                        <port>FlightController.payloadCmd</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet9" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>mission_planner</subcomponent>
                        <port>MissionPlanner.tasks</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>flight_controller</subcomponent>
                        <port>FlightController.tasks</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet10" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>RC_receiver</subcomponent>
                        <port>RCReceiver.normal</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet10</subcomponent>
                        <port>RCReceiver.normal</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet11" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>RC_receiver_health_check</subcomponent>
                        <port>RCReceiverHealthCheck.ATE6</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet11</subcomponent>
                        <port>RCReceiverHealthCheck.ATE6</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet12" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>state_controller</subcomponent>
                        <port>StateController.mstate</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>flight_controller</subcomponent>
                        <port>FlightController.mstate</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet13" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>actuators</subcomponent>
                        <port>Actuators.payload_performed</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>flight_controller</subcomponent>
                        <port>FlightController.payload_performed</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet14" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>actuators</subcomponent>
                        <port>Actuators.battery_level</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>battery_health_check</subcomponent>
                        <port>BatteryHealthCheck.battery_level</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet15" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>battery_health_check</subcomponent>
                        <port>BatteryHealthCheck.ATE7</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet15</subcomponent>
                        <port>BatteryHealthCheck.ATE7</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet16" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>mixer</subcomponent>
                        <port>Mixer.cmd</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>actuators</subcomponent>
                        <port>Actuators.cmd</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet17" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>RC_receiver</subcomponent>
                        <port>RCReceiver.payloadCMD</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet17</subcomponent>
                        <port>RCReceiver.payloadCMD</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet18" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>RC_receiver</subcomponent>
                        <port>RCReceiver.move</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet18</subcomponent>
                        <port>RCReceiver.move</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet19" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>RC_receiver</subcomponent>
                        <port>RCReceiver.uavMode</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet19</subcomponent>
                        <port>RCReceiver.uavMode</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet20" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>state_controller</subcomponent>
                        <port>StateController.mstate</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>actuators</subcomponent>
                        <port>Actuators.mstate</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet21" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>state_controller</subcomponent>
                        <port>StateController.mstate</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>mixer</subcomponent>
                        <port>Mixer.mstate</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet22" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>mixer</subcomponent>
                        <port>Mixer.cmd</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <componentPort>UAVSystem.cmd</componentPort>
                </destination>
            </connection>
            <connection name="ethernet23" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>position_estimator</subcomponent>
                        <port>PositionEstimator.currentPos</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <componentPort>UAVSystem.currentPos</componentPort>
                </destination>
            </connection>
            <connection name="ethernet24" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>flight_controller</subcomponent>
                        <port>FlightController.payloadCmd</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <componentPort>UAVSystem.payloadCmdFC</componentPort>
                </destination>
            </connection>
            <connection name="ethernet25" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>RC_receiver</subcomponent>
                        <port>RCReceiver.payloadCMD</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <componentPort>UAVSystem.payloadCmdRC</componentPort>
                </destination>
            </connection>
            <connection name="ethernet26" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>state_controller</subcomponent>
                        <port>StateController.mstate</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <componentPort>UAVSystem.mstate</componentPort>
                </destination>
            </connection>
            <connection name="ethernet27" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>mission_planner</subcomponent>
                        <port>MissionPlanner.tasks</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <componentPort>UAVSystem.tasks</componentPort>
                </destination>
            </connection>
            <connection name="ethernet28" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>actuators</subcomponent>
                        <port>Actuators.payload_performed</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <componentPort>UAVSystem.payload_performed</componentPort>
                </destination>
            </connection>
            <connection name="ethernet29_A" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>gps</subcomponent>
                        <port>GPS.pos</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet29_A</subcomponent>
                        <port>GPS.pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet30_A" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>gps</subcomponent>
                        <port>GPS.dir</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet30_A</subcomponent>
                        <port>GPS.dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet29_B" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>dme_vor</subcomponent>
                        <port>DME_VOR.pos</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet29_B</subcomponent>
                        <port>DME_VOR.pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet30_B" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>dme_vor</subcomponent>
                        <port>DME_VOR.dir</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet30_B</subcomponent>
                        <port>DME_VOR.dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet29_C" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>iru</subcomponent>
                        <port>IRU.pos</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet29_C</subcomponent>
                        <port>IRU.pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet30_C" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>iru</subcomponent>
                        <port>IRU.dir</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet30_C</subcomponent>
                        <port>IRU.dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet15_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet15</subcomponent>
                        <port>BatteryHealthCheck.ATE7</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>state_controller</subcomponent>
                        <port>StateController.ATE7</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet8_instrumented_channel" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet8</subcomponent>
                        <port>FlightController.payloadCmd</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>actuators</subcomponent>
                        <port>Actuators.payloadCmdFC</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet7_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet7</subcomponent>
                        <port>FlightController.waypoint</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>navigator</subcomponent>
                        <port>Navigator.waypoint</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet29_A_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet29_A</subcomponent>
                        <port>GPS.pos</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>triplex_voter</subcomponent>
                        <port>TriplexVoter.gps_pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet30_A_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet30_A</subcomponent>
                        <port>GPS.dir</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>triplex_voter</subcomponent>
                        <port>TriplexVoter.gps_dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet29_B_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet29_B</subcomponent>
                        <port>DME_VOR.pos</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>triplex_voter</subcomponent>
                        <port>TriplexVoter.dme_vor_pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet30_B_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet30_B</subcomponent>
                        <port>DME_VOR.dir</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>triplex_voter</subcomponent>
                        <port>TriplexVoter.dme_vor_dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet29_C_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet29_C</subcomponent>
                        <port>IRU.pos</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>triplex_voter</subcomponent>
                        <port>TriplexVoter.iru_pos</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet30_C_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet30_C</subcomponent>
                        <port>IRU.dir</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>triplex_voter</subcomponent>
                        <port>TriplexVoter.iru_dir</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet6_instrumented_channel" flow="Xdata" data_encrypted="false" authenticated="false" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet6</subcomponent>
                        <port>Navigator.move</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>mixer</subcomponent>
                        <port>Mixer.moveNav</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet5_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet5</subcomponent>
                        <port>Navigator.dest_reached</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>flight_controller</subcomponent>
                        <port>FlightController.dest_reached</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet10_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet10</subcomponent>
                        <port>RCReceiver.normal</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>RC_receiver_health_check</subcomponent>
                        <port>RCReceiverHealthCheck.normal</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet17_instrumented_channel" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet17</subcomponent>
                        <port>RCReceiver.payloadCMD</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>actuators</subcomponent>
                        <port>Actuators.payloadCmdRC</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet18_instrumented_channel" flow="Control" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet18</subcomponent>
                        <port>RCReceiver.move</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>mixer</subcomponent>
                        <port>Mixer.moveRC</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet19_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet19</subcomponent>
                        <port>RCReceiver.uavMode</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>state_controller</subcomponent>
                        <port>StateController.uavMode</port>
                    </subcomponentPort>
                </destination>
            </connection>
            <connection name="ethernet11_instrumented_channel" flow="Xdata" data_encrypted="true" authenticated="true" conn_type="Local">
                <source>
                    <subcomponentPort>
                        <subcomponent>instrumented_channel_ethernet11</subcomponent>
                        <port>RCReceiverHealthCheck.ATE6</port>
                    </subcomponentPort>
                </source>
                <destination>
                    <subcomponentPort>
                        <subcomponent>state_controller</subcomponent>
                        <port>StateController.ATE6</port>
                    </subcomponentPort>
                </destination>
            </connection>
        </blockImpl>
    </componentImpl>
    <dataflowCode>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>INITIAL_BATTERY_LEVEL</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:plainType>int</vdm_data:plainType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:intLiteral>100</vdm_lustre:intLiteral>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>BATTERY_LEVEL_THRESHOLD</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:plainType>int</vdm_data:plainType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:intLiteral>20</vdm_lustre:intLiteral>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>BATTERY_CONSUMPTION_LOWER_BOUND</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:plainType>int</vdm_data:plainType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>BATTERY_CONSUMPTION_UPPER_BOUND</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:plainType>int</vdm_data:plainType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:intLiteral>4</vdm_lustre:intLiteral>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>RC_RECEIVER_TOLERANCE_LEVEL</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:plainType>int</vdm_data:plainType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>LAUNCH_POS</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:recordLiteral vdm_lustre:recordType="Position.impl">
                    <vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldIdentifier>x</vdm_lustre:fieldIdentifier>
                        <vdm_lustre:fieldValue>
                            <vdm_lustre:intLiteral>0</vdm_lustre:intLiteral>
                        </vdm_lustre:fieldValue>
                    </vdm_lustre:fieldDefinition>
                    <vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldIdentifier>y</vdm_lustre:fieldIdentifier>
                        <vdm_lustre:fieldValue>
                            <vdm_lustre:intLiteral>0</vdm_lustre:intLiteral>
                        </vdm_lustre:fieldValue>
                    </vdm_lustre:fieldDefinition>
                </vdm_lustre:recordLiteral>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>LAUNCH_DIR</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>North</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>PILOT_TARGET_POSITION</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:recordLiteral vdm_lustre:recordType="Position.impl">
                    <vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldIdentifier>x</vdm_lustre:fieldIdentifier>
                        <vdm_lustre:fieldValue>
                            <vdm_lustre:intLiteral>2</vdm_lustre:intLiteral>
                        </vdm_lustre:fieldValue>
                    </vdm_lustre:fieldDefinition>
                    <vdm_lustre:fieldDefinition>
                        <vdm_lustre:fieldIdentifier>y</vdm_lustre:fieldIdentifier>
                        <vdm_lustre:fieldValue>
                            <vdm_lustre:intLiteral>2</vdm_lustre:intLiteral>
                        </vdm_lustre:fieldValue>
                    </vdm_lustre:fieldDefinition>
                </vdm_lustre:recordLiteral>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_North</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>North</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_East</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>East</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_West</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>West</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_South</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>South</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_Y_0</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>YawAngle</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>Y_0</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_Y_90</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>YawAngle</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>Y_90</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_Y_180</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>YawAngle</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>Y_180</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_Y_270</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>YawAngle</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>Y_270</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_IncreaseX</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>IncreaseX</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_IncreaseY</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>IncreaseY</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_DecreaseX</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>DecreaseX</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_DecreaseY</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>DecreaseY</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_IncreaseYaw</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>IncreaseYaw</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_DecreaseYaw</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>DecreaseYaw</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_Move_Forward</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>Move_Forward</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_Turn_Left</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>Turn_Left</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_Stop</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>Stop</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_None</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>None</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:constantDeclaration>
            <vdm_lustre:name>c_Camera</vdm_lustre:name>
            <vdm_lustre:dataType>
                <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
            </vdm_lustre:dataType>
            <vdm_lustre:definition>
                <vdm_lustre:identifier>Camera</vdm_lustre:identifier>
            </vdm_lustre:definition>
        </vdm_lustre:constantDeclaration>
        <vdm_lustre:nodeDeclaration vdm_lustre:isFunction="false">
            <vdm_lustre:name>duration</vdm_lustre:name>
            <vdm_lustre:inputParameter vdm_lustre:isConstant="false">
                <vdm_lustre:name>p</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
            </vdm_lustre:inputParameter>
            <vdm_lustre:outputParameter>
                <vdm_lustre:name>r</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>int</vdm_data:plainType>
                </vdm_lustre:dataType>
            </vdm_lustre:outputParameter>
            <vdm_lustre:body>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>r</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:arrow>
                            <vdm_lustre:lhsOperand>
<vdm_lustre:conditionalExpression>
    <vdm_lustre:condition>
        <vdm_lustre:not>
            <vdm_lustre:identifier>p</vdm_lustre:identifier>
        </vdm_lustre:not>
    </vdm_lustre:condition>
    <vdm_lustre:thenBranch>
        <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
    </vdm_lustre:thenBranch>
    <vdm_lustre:elseBranch>
        <vdm_lustre:intLiteral>0</vdm_lustre:intLiteral>
    </vdm_lustre:elseBranch>
</vdm_lustre:conditionalExpression>
                            </vdm_lustre:lhsOperand>
                            <vdm_lustre:rhsOperand>
<vdm_lustre:conditionalExpression>
    <vdm_lustre:condition>
        <vdm_lustre:not>
            <vdm_lustre:identifier>p</vdm_lustre:identifier>
        </vdm_lustre:not>
    </vdm_lustre:condition>
    <vdm_lustre:thenBranch>
        <vdm_lustre:plus>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:pre>
                    <vdm_lustre:identifier>r</vdm_lustre:identifier>
                </vdm_lustre:pre>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:plus>
    </vdm_lustre:thenBranch>
    <vdm_lustre:elseBranch>
        <vdm_lustre:intLiteral>0</vdm_lustre:intLiteral>
    </vdm_lustre:elseBranch>
</vdm_lustre:conditionalExpression>
                            </vdm_lustre:rhsOperand>
                        </vdm_lustre:arrow>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
            </vdm_lustre:body>
        </vdm_lustre:nodeDeclaration>
        <vdm_lustre:nodeDeclaration vdm_lustre:isFunction="false">
            <vdm_lustre:name>is_equal</vdm_lustre:name>
            <vdm_lustre:inputParameter vdm_lustre:isConstant="false">
                <vdm_lustre:name>pos1</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:inputParameter>
            <vdm_lustre:inputParameter vdm_lustre:isConstant="false">
                <vdm_lustre:name>pos2</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:inputParameter>
            <vdm_lustre:outputParameter>
                <vdm_lustre:name>z</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
            </vdm_lustre:outputParameter>
            <vdm_lustre:body>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>z</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:and>
                            <vdm_lustre:lhsOperand>
<vdm_lustre:equal>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>pos1</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>pos2</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:rhsOperand>
</vdm_lustre:equal>
                            </vdm_lustre:lhsOperand>
                            <vdm_lustre:rhsOperand>
<vdm_lustre:equal>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>pos1</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>pos2</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:rhsOperand>
</vdm_lustre:equal>
                            </vdm_lustre:rhsOperand>
                        </vdm_lustre:and>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
            </vdm_lustre:body>
        </vdm_lustre:nodeDeclaration>
        <vdm_lustre:nodeDeclaration vdm_lustre:isFunction="false">
            <vdm_lustre:name>yaw2dir</vdm_lustre:name>
            <vdm_lustre:inputParameter vdm_lustre:isConstant="false">
                <vdm_lustre:name>yaw</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>YawAngle</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:inputParameter>
            <vdm_lustre:outputParameter>
                <vdm_lustre:name>dir</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:outputParameter>
            <vdm_lustre:body>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>dir</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:conditionalExpression>
                            <vdm_lustre:condition>
<vdm_lustre:equal>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:identifier>c_Y_0</vdm_lustre:identifier>
    </vdm_lustre:rhsOperand>
</vdm_lustre:equal>
                            </vdm_lustre:condition>
                            <vdm_lustre:thenBranch>
<vdm_lustre:identifier>c_North</vdm_lustre:identifier>
                            </vdm_lustre:thenBranch>
                            <vdm_lustre:elseBranch>
<vdm_lustre:conditionalExpression>
    <vdm_lustre:condition>
        <vdm_lustre:equal>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:identifier>c_Y_90</vdm_lustre:identifier>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:equal>
    </vdm_lustre:condition>
    <vdm_lustre:thenBranch>
        <vdm_lustre:identifier>c_East</vdm_lustre:identifier>
    </vdm_lustre:thenBranch>
    <vdm_lustre:elseBranch>
        <vdm_lustre:conditionalExpression>
            <vdm_lustre:condition>
                <vdm_lustre:equal>
                    <vdm_lustre:lhsOperand>
                        <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
                    </vdm_lustre:lhsOperand>
                    <vdm_lustre:rhsOperand>
                        <vdm_lustre:identifier>c_Y_180</vdm_lustre:identifier>
                    </vdm_lustre:rhsOperand>
                </vdm_lustre:equal>
            </vdm_lustre:condition>
            <vdm_lustre:thenBranch>
                <vdm_lustre:identifier>c_South</vdm_lustre:identifier>
            </vdm_lustre:thenBranch>
            <vdm_lustre:elseBranch>
                <vdm_lustre:identifier>c_West</vdm_lustre:identifier>
            </vdm_lustre:elseBranch>
        </vdm_lustre:conditionalExpression>
    </vdm_lustre:elseBranch>
</vdm_lustre:conditionalExpression>
                            </vdm_lustre:elseBranch>
                        </vdm_lustre:conditionalExpression>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
            </vdm_lustre:body>
        </vdm_lustre:nodeDeclaration>
        <vdm_lustre:nodeDeclaration vdm_lustre:isFunction="false">
            <vdm_lustre:name>set_task_status</vdm_lustre:name>
            <vdm_lustre:inputParameter vdm_lustre:isConstant="false">
                <vdm_lustre:name>curr_task</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:inputParameter>
            <vdm_lustre:inputParameter vdm_lustre:isConstant="false">
                <vdm_lustre:name>new_status</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>TaskStatus</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:inputParameter>
            <vdm_lustre:outputParameter>
                <vdm_lustre:name>new_task</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Task</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:outputParameter>
            <vdm_lustre:body>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>new_task</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:recordLiteral vdm_lustre:recordType="Task.impl">
                            <vdm_lustre:fieldDefinition>
<vdm_lustre:fieldIdentifier>waypoint</vdm_lustre:fieldIdentifier>
<vdm_lustre:fieldValue>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>curr_task</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>waypoint</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:fieldValue>
                            </vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldDefinition>
<vdm_lustre:fieldIdentifier>action</vdm_lustre:fieldIdentifier>
<vdm_lustre:fieldValue>
    <vdm_lustre:recordProjection>
        <vdm_lustre:recordReference>
            <vdm_lustre:identifier>curr_task</vdm_lustre:identifier>
        </vdm_lustre:recordReference>
        <vdm_lustre:fieldId>action</vdm_lustre:fieldId>
    </vdm_lustre:recordProjection>
</vdm_lustre:fieldValue>
                            </vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldDefinition>
<vdm_lustre:fieldIdentifier>status</vdm_lustre:fieldIdentifier>
<vdm_lustre:fieldValue>
    <vdm_lustre:identifier>new_status</vdm_lustre:identifier>
</vdm_lustre:fieldValue>
                            </vdm_lustre:fieldDefinition>
                        </vdm_lustre:recordLiteral>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
            </vdm_lustre:body>
        </vdm_lustre:nodeDeclaration>
        <vdm_lustre:nodeDeclaration vdm_lustre:isFunction="false">
            <vdm_lustre:name>LocationSource_Pos</vdm_lustre:name>
            <vdm_lustre:inputParameter vdm_lustre:isConstant="false">
                <vdm_lustre:name>cmd</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:inputParameter>
            <vdm_lustre:outputParameter>
                <vdm_lustre:name>GPS_pos</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:outputParameter>
            <vdm_lustre:body>
                <vdm_lustre:variableDeclaration>
                    <vdm_lustre:name>nextPos</vdm_lustre:name>
                    <vdm_lustre:dataType>
                        <vdm_data:userDefinedType>Position</vdm_data:userDefinedType>
                    </vdm_lustre:dataType>
                </vdm_lustre:variableDeclaration>
                <vdm_lustre:variableDeclaration>
                    <vdm_lustre:name>x</vdm_lustre:name>
                    <vdm_lustre:dataType>
                        <vdm_data:plainType>int</vdm_data:plainType>
                    </vdm_lustre:dataType>
                </vdm_lustre:variableDeclaration>
                <vdm_lustre:variableDeclaration>
                    <vdm_lustre:name>y</vdm_lustre:name>
                    <vdm_lustre:dataType>
                        <vdm_data:plainType>int</vdm_data:plainType>
                    </vdm_lustre:dataType>
                </vdm_lustre:variableDeclaration>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>GPS_pos</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:arrow>
                            <vdm_lustre:lhsOperand>
<vdm_lustre:identifier>LAUNCH_POS</vdm_lustre:identifier>
                            </vdm_lustre:lhsOperand>
                            <vdm_lustre:rhsOperand>
<vdm_lustre:pre>
    <vdm_lustre:identifier>nextPos</vdm_lustre:identifier>
</vdm_lustre:pre>
                            </vdm_lustre:rhsOperand>
                        </vdm_lustre:arrow>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>x</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:conditionalExpression>
                            <vdm_lustre:condition>
<vdm_lustre:equal>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:identifier>c_IncreaseX</vdm_lustre:identifier>
    </vdm_lustre:rhsOperand>
</vdm_lustre:equal>
                            </vdm_lustre:condition>
                            <vdm_lustre:thenBranch>
<vdm_lustre:plus>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>GPS_pos</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
    </vdm_lustre:rhsOperand>
</vdm_lustre:plus>
                            </vdm_lustre:thenBranch>
                            <vdm_lustre:elseBranch>
<vdm_lustre:conditionalExpression>
    <vdm_lustre:condition>
        <vdm_lustre:equal>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:identifier>c_DecreaseX</vdm_lustre:identifier>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:equal>
    </vdm_lustre:condition>
    <vdm_lustre:thenBranch>
        <vdm_lustre:minus>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:recordProjection>
                    <vdm_lustre:recordReference>
                        <vdm_lustre:identifier>GPS_pos</vdm_lustre:identifier>
                    </vdm_lustre:recordReference>
                    <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
                </vdm_lustre:recordProjection>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:minus>
    </vdm_lustre:thenBranch>
    <vdm_lustre:elseBranch>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>GPS_pos</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>x</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:elseBranch>
</vdm_lustre:conditionalExpression>
                            </vdm_lustre:elseBranch>
                        </vdm_lustre:conditionalExpression>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>y</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:conditionalExpression>
                            <vdm_lustre:condition>
<vdm_lustre:equal>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:identifier>c_IncreaseY</vdm_lustre:identifier>
    </vdm_lustre:rhsOperand>
</vdm_lustre:equal>
                            </vdm_lustre:condition>
                            <vdm_lustre:thenBranch>
<vdm_lustre:plus>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>GPS_pos</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
    </vdm_lustre:rhsOperand>
</vdm_lustre:plus>
                            </vdm_lustre:thenBranch>
                            <vdm_lustre:elseBranch>
<vdm_lustre:conditionalExpression>
    <vdm_lustre:condition>
        <vdm_lustre:equal>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:identifier>c_DecreaseY</vdm_lustre:identifier>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:equal>
    </vdm_lustre:condition>
    <vdm_lustre:thenBranch>
        <vdm_lustre:minus>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:recordProjection>
                    <vdm_lustre:recordReference>
                        <vdm_lustre:identifier>GPS_pos</vdm_lustre:identifier>
                    </vdm_lustre:recordReference>
                    <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
                </vdm_lustre:recordProjection>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:intLiteral>1</vdm_lustre:intLiteral>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:minus>
    </vdm_lustre:thenBranch>
    <vdm_lustre:elseBranch>
        <vdm_lustre:recordProjection>
            <vdm_lustre:recordReference>
                <vdm_lustre:identifier>GPS_pos</vdm_lustre:identifier>
            </vdm_lustre:recordReference>
            <vdm_lustre:fieldId>y</vdm_lustre:fieldId>
        </vdm_lustre:recordProjection>
    </vdm_lustre:elseBranch>
</vdm_lustre:conditionalExpression>
                            </vdm_lustre:elseBranch>
                        </vdm_lustre:conditionalExpression>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>nextPos</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:recordLiteral vdm_lustre:recordType="Position.impl">
                            <vdm_lustre:fieldDefinition>
<vdm_lustre:fieldIdentifier>x</vdm_lustre:fieldIdentifier>
<vdm_lustre:fieldValue>
    <vdm_lustre:identifier>x</vdm_lustre:identifier>
</vdm_lustre:fieldValue>
                            </vdm_lustre:fieldDefinition>
                            <vdm_lustre:fieldDefinition>
<vdm_lustre:fieldIdentifier>y</vdm_lustre:fieldIdentifier>
<vdm_lustre:fieldValue>
    <vdm_lustre:identifier>y</vdm_lustre:identifier>
</vdm_lustre:fieldValue>
                            </vdm_lustre:fieldDefinition>
                        </vdm_lustre:recordLiteral>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
            </vdm_lustre:body>
        </vdm_lustre:nodeDeclaration>
        <vdm_lustre:nodeDeclaration vdm_lustre:isFunction="false">
            <vdm_lustre:name>LocationSource_Dir</vdm_lustre:name>
            <vdm_lustre:inputParameter vdm_lustre:isConstant="false">
                <vdm_lustre:name>cmd</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>MotorCommand</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:inputParameter>
            <vdm_lustre:outputParameter>
                <vdm_lustre:name>GPS_dir</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:outputParameter>
            <vdm_lustre:body>
                <vdm_lustre:variableDeclaration>
                    <vdm_lustre:name>nextDir</vdm_lustre:name>
                    <vdm_lustre:dataType>
                        <vdm_data:userDefinedType>Direction</vdm_data:userDefinedType>
                    </vdm_lustre:dataType>
                </vdm_lustre:variableDeclaration>
                <vdm_lustre:variableDeclaration>
                    <vdm_lustre:name>yaw</vdm_lustre:name>
                    <vdm_lustre:dataType>
                        <vdm_data:userDefinedType>YawAngle</vdm_data:userDefinedType>
                    </vdm_lustre:dataType>
                </vdm_lustre:variableDeclaration>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>GPS_dir</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:arrow>
                            <vdm_lustre:lhsOperand>
<vdm_lustre:identifier>LAUNCH_DIR</vdm_lustre:identifier>
                            </vdm_lustre:lhsOperand>
                            <vdm_lustre:rhsOperand>
<vdm_lustre:pre>
    <vdm_lustre:identifier>nextDir</vdm_lustre:identifier>
</vdm_lustre:pre>
                            </vdm_lustre:rhsOperand>
                        </vdm_lustre:arrow>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:conditionalExpression>
                            <vdm_lustre:condition>
<vdm_lustre:equal>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:identifier>c_IncreaseYaw</vdm_lustre:identifier>
    </vdm_lustre:rhsOperand>
</vdm_lustre:equal>
                            </vdm_lustre:condition>
                            <vdm_lustre:thenBranch>
<vdm_lustre:arrow>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:identifier>c_Y_90</vdm_lustre:identifier>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:conditionalExpression>
            <vdm_lustre:condition>
                <vdm_lustre:equal>
                    <vdm_lustre:lhsOperand>
                        <vdm_lustre:pre>
                            <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
                        </vdm_lustre:pre>
                    </vdm_lustre:lhsOperand>
                    <vdm_lustre:rhsOperand>
                        <vdm_lustre:identifier>c_Y_0</vdm_lustre:identifier>
                    </vdm_lustre:rhsOperand>
                </vdm_lustre:equal>
            </vdm_lustre:condition>
            <vdm_lustre:thenBranch>
                <vdm_lustre:identifier>c_Y_90</vdm_lustre:identifier>
            </vdm_lustre:thenBranch>
            <vdm_lustre:elseBranch>
                <vdm_lustre:conditionalExpression>
                    <vdm_lustre:condition>
                        <vdm_lustre:equal>
                            <vdm_lustre:lhsOperand>
<vdm_lustre:pre>
    <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
</vdm_lustre:pre>
                            </vdm_lustre:lhsOperand>
                            <vdm_lustre:rhsOperand>
<vdm_lustre:identifier>c_Y_90</vdm_lustre:identifier>
                            </vdm_lustre:rhsOperand>
                        </vdm_lustre:equal>
                    </vdm_lustre:condition>
                    <vdm_lustre:thenBranch>
                        <vdm_lustre:identifier>c_Y_180</vdm_lustre:identifier>
                    </vdm_lustre:thenBranch>
                    <vdm_lustre:elseBranch>
                        <vdm_lustre:conditionalExpression>
                            <vdm_lustre:condition>
<vdm_lustre:equal>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:pre>
            <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
        </vdm_lustre:pre>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:identifier>c_Y_180</vdm_lustre:identifier>
    </vdm_lustre:rhsOperand>
</vdm_lustre:equal>
                            </vdm_lustre:condition>
                            <vdm_lustre:thenBranch>
<vdm_lustre:identifier>c_Y_270</vdm_lustre:identifier>
                            </vdm_lustre:thenBranch>
                            <vdm_lustre:elseBranch>
<vdm_lustre:identifier>c_Y_0</vdm_lustre:identifier>
                            </vdm_lustre:elseBranch>
                        </vdm_lustre:conditionalExpression>
                    </vdm_lustre:elseBranch>
                </vdm_lustre:conditionalExpression>
            </vdm_lustre:elseBranch>
        </vdm_lustre:conditionalExpression>
    </vdm_lustre:rhsOperand>
</vdm_lustre:arrow>
                            </vdm_lustre:thenBranch>
                            <vdm_lustre:elseBranch>
<vdm_lustre:conditionalExpression>
    <vdm_lustre:condition>
        <vdm_lustre:equal>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:identifier>cmd</vdm_lustre:identifier>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:identifier>c_DecreaseYaw</vdm_lustre:identifier>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:equal>
    </vdm_lustre:condition>
    <vdm_lustre:thenBranch>
        <vdm_lustre:arrow>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:identifier>c_Y_270</vdm_lustre:identifier>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:conditionalExpression>
                    <vdm_lustre:condition>
                        <vdm_lustre:equal>
                            <vdm_lustre:lhsOperand>
<vdm_lustre:pre>
    <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
</vdm_lustre:pre>
                            </vdm_lustre:lhsOperand>
                            <vdm_lustre:rhsOperand>
<vdm_lustre:identifier>c_Y_0</vdm_lustre:identifier>
                            </vdm_lustre:rhsOperand>
                        </vdm_lustre:equal>
                    </vdm_lustre:condition>
                    <vdm_lustre:thenBranch>
                        <vdm_lustre:identifier>c_Y_270</vdm_lustre:identifier>
                    </vdm_lustre:thenBranch>
                    <vdm_lustre:elseBranch>
                        <vdm_lustre:conditionalExpression>
                            <vdm_lustre:condition>
<vdm_lustre:equal>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:pre>
            <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
        </vdm_lustre:pre>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:identifier>c_Y_90</vdm_lustre:identifier>
    </vdm_lustre:rhsOperand>
</vdm_lustre:equal>
                            </vdm_lustre:condition>
                            <vdm_lustre:thenBranch>
<vdm_lustre:identifier>c_Y_0</vdm_lustre:identifier>
                            </vdm_lustre:thenBranch>
                            <vdm_lustre:elseBranch>
<vdm_lustre:conditionalExpression>
    <vdm_lustre:condition>
        <vdm_lustre:equal>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:pre>
                    <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
                </vdm_lustre:pre>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:identifier>c_Y_180</vdm_lustre:identifier>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:equal>
    </vdm_lustre:condition>
    <vdm_lustre:thenBranch>
        <vdm_lustre:identifier>c_Y_90</vdm_lustre:identifier>
    </vdm_lustre:thenBranch>
    <vdm_lustre:elseBranch>
        <vdm_lustre:identifier>c_Y_180</vdm_lustre:identifier>
    </vdm_lustre:elseBranch>
</vdm_lustre:conditionalExpression>
                            </vdm_lustre:elseBranch>
                        </vdm_lustre:conditionalExpression>
                    </vdm_lustre:elseBranch>
                </vdm_lustre:conditionalExpression>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:arrow>
    </vdm_lustre:thenBranch>
    <vdm_lustre:elseBranch>
        <vdm_lustre:arrow>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:identifier>c_Y_0</vdm_lustre:identifier>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:pre>
                    <vdm_lustre:identifier>yaw</vdm_lustre:identifier>
                </vdm_lustre:pre>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:arrow>
    </vdm_lustre:elseBranch>
</vdm_lustre:conditionalExpression>
                            </vdm_lustre:elseBranch>
                        </vdm_lustre:conditionalExpression>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>nextDir</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:call vdm_lustre:nodeId="yaw2dir">
                            <vdm_lustre:argument>
<vdm_lustre:identifier>yaw</vdm_lustre:identifier>
                            </vdm_lustre:argument>
                        </vdm_lustre:call>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
            </vdm_lustre:body>
        </vdm_lustre:nodeDeclaration>
        <vdm_lustre:nodeDeclaration vdm_lustre:isFunction="false">
            <vdm_lustre:name>RemoteOperatorController_Move</vdm_lustre:name>
            <vdm_lustre:outputParameter>
                <vdm_lustre:name>move</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Movement</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:outputParameter>
            <vdm_lustre:body>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>move</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:arrow>
                            <vdm_lustre:lhsOperand>
<vdm_lustre:identifier>c_Move_Forward</vdm_lustre:identifier>
                            </vdm_lustre:lhsOperand>
                            <vdm_lustre:rhsOperand>
<vdm_lustre:pre>
    <vdm_lustre:arrow>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>c_Move_Forward</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:pre>
                <vdm_lustre:arrow>
                    <vdm_lustre:lhsOperand>
                        <vdm_lustre:identifier>c_Turn_Left</vdm_lustre:identifier>
                    </vdm_lustre:lhsOperand>
                    <vdm_lustre:rhsOperand>
                        <vdm_lustre:pre>
                            <vdm_lustre:arrow>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>c_Move_Forward</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:pre>
        <vdm_lustre:arrow>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:identifier>c_Move_Forward</vdm_lustre:identifier>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:pre>
                    <vdm_lustre:identifier>c_Stop</vdm_lustre:identifier>
                </vdm_lustre:pre>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:arrow>
    </vdm_lustre:pre>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:arrow>
                        </vdm_lustre:pre>
                    </vdm_lustre:rhsOperand>
                </vdm_lustre:arrow>
            </vdm_lustre:pre>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:arrow>
</vdm_lustre:pre>
                            </vdm_lustre:rhsOperand>
                        </vdm_lustre:arrow>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
            </vdm_lustre:body>
        </vdm_lustre:nodeDeclaration>
        <vdm_lustre:nodeDeclaration vdm_lustre:isFunction="false">
            <vdm_lustre:name>RemoteOperatorController_payloadCMD</vdm_lustre:name>
            <vdm_lustre:outputParameter>
                <vdm_lustre:name>payloadCMD</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:userDefinedType>Action</vdm_data:userDefinedType>
                </vdm_lustre:dataType>
            </vdm_lustre:outputParameter>
            <vdm_lustre:body>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>payloadCMD</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:arrow>
                            <vdm_lustre:lhsOperand>
<vdm_lustre:identifier>c_None</vdm_lustre:identifier>
                            </vdm_lustre:lhsOperand>
                            <vdm_lustre:rhsOperand>
<vdm_lustre:pre>
    <vdm_lustre:arrow>
        <vdm_lustre:lhsOperand>
            <vdm_lustre:identifier>c_None</vdm_lustre:identifier>
        </vdm_lustre:lhsOperand>
        <vdm_lustre:rhsOperand>
            <vdm_lustre:pre>
                <vdm_lustre:arrow>
                    <vdm_lustre:lhsOperand>
                        <vdm_lustre:identifier>c_None</vdm_lustre:identifier>
                    </vdm_lustre:lhsOperand>
                    <vdm_lustre:rhsOperand>
                        <vdm_lustre:pre>
                            <vdm_lustre:arrow>
<vdm_lustre:lhsOperand>
    <vdm_lustre:identifier>c_None</vdm_lustre:identifier>
</vdm_lustre:lhsOperand>
<vdm_lustre:rhsOperand>
    <vdm_lustre:pre>
        <vdm_lustre:arrow>
            <vdm_lustre:lhsOperand>
                <vdm_lustre:identifier>c_None</vdm_lustre:identifier>
            </vdm_lustre:lhsOperand>
            <vdm_lustre:rhsOperand>
                <vdm_lustre:pre>
                    <vdm_lustre:arrow>
                        <vdm_lustre:lhsOperand>
                            <vdm_lustre:identifier>c_Camera</vdm_lustre:identifier>
                        </vdm_lustre:lhsOperand>
                        <vdm_lustre:rhsOperand>
                            <vdm_lustre:pre>
<vdm_lustre:identifier>c_None</vdm_lustre:identifier>
                            </vdm_lustre:pre>
                        </vdm_lustre:rhsOperand>
                    </vdm_lustre:arrow>
                </vdm_lustre:pre>
            </vdm_lustre:rhsOperand>
        </vdm_lustre:arrow>
    </vdm_lustre:pre>
</vdm_lustre:rhsOperand>
                            </vdm_lustre:arrow>
                        </vdm_lustre:pre>
                    </vdm_lustre:rhsOperand>
                </vdm_lustre:arrow>
            </vdm_lustre:pre>
        </vdm_lustre:rhsOperand>
    </vdm_lustre:arrow>
</vdm_lustre:pre>
                            </vdm_lustre:rhsOperand>
                        </vdm_lustre:arrow>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
            </vdm_lustre:body>
        </vdm_lustre:nodeDeclaration>
        <vdm_lustre:nodeDeclaration vdm_lustre:isFunction="false">
            <vdm_lustre:name>sofar</vdm_lustre:name>
            <vdm_lustre:inputParameter vdm_lustre:isConstant="false">
                <vdm_lustre:name>a</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
            </vdm_lustre:inputParameter>
            <vdm_lustre:outputParameter>
                <vdm_lustre:name>b</vdm_lustre:name>
                <vdm_lustre:dataType>
                    <vdm_data:plainType>bool</vdm_data:plainType>
                </vdm_lustre:dataType>
            </vdm_lustre:outputParameter>
            <vdm_lustre:body>
                <vdm_lustre:equation>
                    <vdm_lustre:lhs>
                        <vdm_lustre:identifier>b</vdm_lustre:identifier>
                    </vdm_lustre:lhs>
                    <vdm_lustre:rhs>
                        <vdm_lustre:arrow>
                            <vdm_lustre:lhsOperand>
<vdm_lustre:identifier>a</vdm_lustre:identifier>
                            </vdm_lustre:lhsOperand>
                            <vdm_lustre:rhsOperand>
<vdm_lustre:and>
    <vdm_lustre:lhsOperand>
        <vdm_lustre:identifier>a</vdm_lustre:identifier>
    </vdm_lustre:lhsOperand>
    <vdm_lustre:rhsOperand>
        <vdm_lustre:pre>
            <vdm_lustre:identifier>b</vdm_lustre:identifier>
        </vdm_lustre:pre>
    </vdm_lustre:rhsOperand>
</vdm_lustre:and>
                            </vdm_lustre:rhsOperand>
                        </vdm_lustre:arrow>
                    </vdm_lustre:rhs>
                </vdm_lustre:equation>
            </vdm_lustre:body>
        </vdm_lustre:nodeDeclaration>
    </dataflowCode>
</vdm_model:model>
